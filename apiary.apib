FORMAT: 1A
HOST: https://api.teamleader.eu

# Teamleader API v2

This is the Teamleader API v2 documentation.

### users.list [GET /users.list]

Get a list of all users

+ Response 200 (application/json)

        [
            {
                "id":1,
                "name":"John Smith",
                "email":"john@teamleader.eu",
                "gsm":"+32412654321",
                "telephone":"+3291239843",
                "team_id":1,
                "title":"Sales",
                "active":1
            },
            {
                "id":2,
                "name":"Jane Doe",
                "email":"jane@teamleader.eu",
                "gsm":"+32412654322",
                "telephone":"3291239844",
                "team_id":1,
                "title":"Designer",
                "active":1
            }
        ]

### departments.list [GET /departments.list]

Get a list of all departments

+ Response 200 (application/json)

        [
            {
                "id":1,
                "name":"Sales"
            },
            {
                "id":2,
                "name":"Customer Support"
            }
        ]


### tags.list [GET /tags.list]

Get a list of all tags

+ Response 200 (application/json)

        {
            "1": "A Tag",
            "2": "Another Tag",
            "3": "Tagtastic"
        }

### segments.list [GET /segments.list{?object_type}]

Get a list of all segments

+ Parameters

    + `object_type`: `crm_companies` (enum[string], required)

        Pick one of the possible values.

        + Members
            + crm_companies
            + crm_contacts
            + crm_todos
            + crm_callbacks
            + crm_meetings
            + inv_invoices
            + inv_creditnotes
            + pro_projects
            + sale_sales
            + ticket_tickets


+ Response 200 (application/json)

        {
            "Medewerkers": [
                {
                    "id": "owner--1",
                    "name": "",
                    "num_matches": -1
                },
                {
                    "id": "owner-1",
                    "name": "John Smith",
                    "num_matches": -1
                }
            ],
            "Smart segments": []
        }

### contacts.list [GET /contacts.list{?amount,pageno}]

Get a paginated list of contacts

+ Parameters

    + amount: `20` (number, required) - Amount of contacts you want returned, 1 to 100.
    + pageno: `0` (number, required) - The numerated page you want, starts at 0.

+ Response 200 (application/json)

        [
            {
                "id": 1,
                "forename": "John",
                "surname": "Doe",
                "street": "Central Ave",
                "number": "123",
                "zipcode": "90201",
                "city": "Cityville",
                "country": "BE",
                "website": "http://example.com",
                "email": "john@example.com",
                "gsm": "",
                "telephone": "",
                "fax": "",
                "gender": "M",
                "dob": -1,
                "language_code": "EN",
                "language_name": "Engels",
                "date_added": 1454604273,
                "date_edited": 1457009916,
                "status": "",
                "deleted": 0
            },
            {
                "id": 2,
                "forename": "Jane",
                "surname": "Smith",
                "street": "Central Ave",
                "number": "321",
                "zipcode": "90201",
                "city": "Cityville",
                "country": "BE",
                "website": "http://example.org",
                "email": "jane@example.org",
                "gsm": "",
                "telephone": "",
                "fax": "",
                "gender": "U",
                "dob": -1,
                "language_code": "EN",
                "language_name": "Engels",
                "date_added": 1454671709,
                "date_edited": 1454671709,
                "status": "",
                "deleted": 0
            }
        ]

### contact.info [GET /contacts.info{?contact_id}]

Get a paginated list of contacts

+ Parameters

    + contact_id: `1` (number, required) - ID of contact

+ Response 200 (application/json)

        {
            "id": 1163240,
            "forename": "Eee",
            "surname": "Test",
            "salutation": "",
            "street": "",
            "number": "",
            "zipcode": "",
            "city": "",
            "country": "BE",
            "dob": -1,
            "gender": "U",
            "telephone": "",
            "gsm": "",
            "fax": "",
            "email": "simon@teamleader.be",
            "website": "",
            "iban": "",
            "bic": "",
            "date_added": 1454604273,
            "tags": [],
            "language_code": "EN",
            "extra_addresses": [],
            "deleted": 0,
            "custom_fields": {},
            "linked_company_ids": "",
            "linked_company_names": [],
            "linked_company_functions": "",
            "background_info_html": "",
            "external_customer_id": ""
        }


### contact.add [POST /contacts.add]

Add a contact to Teamleader

+ Request (application/json)

    + Attributes (object)
        + forename: `John` (string, required) - The given name of the new contact
        + surname: `Smith` (string, required) - The surname of the new contact
        + email: `john@example.com` (string, required) - The email address of the new contact
        + salutation: `Mr` (string, optional)
        + telephone: `1234567` (string, optional)
        + gsm: `7654321` (string, optional)
        + website: `http://example.com` (string, optional)
        + country: `BE` (string, optional) - Country code according to ISO 3166-1 alpha-2. For Belgium: "BE"
        + zipcode: `90201` (string, optional)
        + city: `Cityville` (string, optional)
        + street: `Central Ave` (string, optional)
        + number: `1` (string, optional)
        + address_name_delivery: `Delivery` (string, optional)
        + zipcode_delivery: `90202` (string, optional)
        + city_delivery: `Citytown` (string, optional)
        + street_delivery: `Central Sq` (string, optional)
        + number_delivery: `1` (string, optional)
        + address_name_visiting: `Visiting` (string, optional)
        + zipcode_visiting: `90203` (string, optional)
        + city_visiting: `VilleCity` (string, optional)
        + street_visiting: `Central Str` (string, optional)
        + number_visiting: `1` (string, optional)
        + address_name_invoicing: `Invoicing` (string, optional)
        + zipcode_invoicing: `90204` (string, optional)
        + city_invoicing: `TownCity` (string, optional)
        + street_invoicing: `Central Rd` (string, optional)
        + number_invoicing: `1` (string, optional)
        + invoice_email_address: `invoicing@example.com` (string, optional)
        + language: `EN` (string, optional) - Language code according to ISO 639-1. For Dutch: "NL"
        + gender: `M` (enum[string], optional)
            + Members
                + M
                + F
                + U
        + dob: `1454604273` (number, optional) - Unix timestamp
        + description: `Met at expo` (string, optional) - Background information on the contact
        + newsletter: `true` (boolean, optional)
        + add_tag_by_string: `expo upsell` (string, optional) - Pass one or more tags, comma-separated. Existing tags will be reused, other tags will be automatically created for you.
        + automerge_by_name: `true` (boolean, optional)
            If this flag is set to 1, Teamleader will merge this info into an existing contact with the same forename and surname, if it finds any.
            + Default: `false`
        + automerge_by_email: `true` (boolean, optional)
            If this flag is set to 1, Teamleader will merge this info into an existing contact with the same email address, if it finds any.
            + Default: `false`
        + custom_field_ID: `bar` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)
        + tracking string: `foo` (string, optional) - Title of the activity
        + tracking_long: `foobar` (string, optional) - Description of the activity

+ Response 200 (application/json)

        {
            "id": 1163240
        }

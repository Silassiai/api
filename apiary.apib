FORMAT: 1A
HOST: https://api.teamleader.eu

# Teamleader API v2

This is the Teamleader API v2 documentation.

## OAuth 2

OAuth 2 is an authorization framework that lets your integration request authorization to data in a user's Teamleader account without getting their password.

Before starting you will need to register your integration. Each registered integration is assigned a unique `client_id` and `client_secret` which will be used in the OAuth flow. Note that the `client_secret` key should not be shared.

### Authorization

Redirect users to the Teamleader authorization page:

`https://app.teamleader.eu/oauth2/authorize`

The following values should be passed as GET parameters:
 - `client_id` - issued when you create your integration
 - `response_type` - must be "code"
 - `state` - unique string to be passed back upon completion (optional)
 - `redirect_uri` - URL to redirect back to after authorization

### Token issuing

If the user authorizes your integration, Teamleader will redirect back to the previously specified `redirect_uri` with a temporary authorization code and the original state parameter if it was provided. If the states don't match, the request may have been created by a third party and you should abort the process.

`https://YOUR_REDIRECT_URI/?code=CODE&state=STATE`

Your server can exchange this authorization code for an access token. Note that authorization codes may only be exchanged once and expire 10 minutes after issuance.

`https://app.teamleader.eu/oauth2/access_token`

The following values should be passed as POST parameters:
 - `client_id` - issued when you register your integration
 - `client_secret` - issued when you register your integration
 - `code` - the authorization code
 - `grant_type` - must be "authorization_code"
 - `redirect_uri` - the original submitted redirect URL

You will receive a JSON response containing an `access_token` and `refresh_token`:

```
{
    "token_type": "Bearer",
    "expires_in": 3600,
    "access_token": ACCESS_TOKEN,
    "refresh_token": REFRESH_TOKEN
}
```

You can use this access token to call API methods on behalf of the user using the Authorization-header. Example:

```
GET https://api.teamleader.eu/contacts.list HTTP/1.1
Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciO...
Accept: application/json
```

The access token will continue functioning until the installing user either revokes the token and/or uninstalls your integration.

### Refresh tokens

Access tokens expire shortly (1 hour) after they are issued for security reasons. If your integration needs to communicate with the API beyond the access token's lifespan you will need to request a new access token using the refresh token which was issued with the access token. Note that refresh tokens can only used once to get a new access token and refresh token.

`https://app.teamleader.eu/oauth2/access_token`

The following values should be passed as POST parameters:
 - `client_id` - issued when you register your integration
 - `client_secret` - issued when you register your integration
 - `refresh_token` - the refresh token
 - `grant_type` - must be "refresh_token"

## General [/]

### users.list [GET /users.list]

Get a list of all users

+ Response 200 (application/json)

    + Attributes (object)
        + data (array[User])

### departments.list [GET /departments.list]

Get a list of all departments

+ Response 200 (application/json)

    + Attributes (object)
        + data (array[Department])

### tags.list [GET /tags.list]

Get a list of all tags

+ Response 200 (application/json)

    + Attributes (object)
        + data (array[Tag])

## Contacts [/contacts]

### contacts.list [GET /contacts.list]

Get a paginated list of contacts

+ Request (application/json)

    + Attributes (object)
        + filter (object, optional)
            + company_id: `1` (number, optional) - Filter contacts by a certain company.
        + page (object, optional)
            + size: `20` (number, optional) - Amount of contacts you want returned, 1 to 100.
                + Default: `20`
            + number: `1` (number, optional) - The numerated page you want, starts at 1.
                + Default: `1`

+ Response 200 (application/json)

    + Attributes (object)
        + data (array[Contact])

### contacts.info [GET /contacts.info]

Get the details for a single contact

+ Request (application/json)

    + Attributes (object)
        + `contact_id`: `1` (number, required)

+ Response 200 (application/json)

    + Attributes (object)
        + data (ContactDetail)

### contacts.add [POST /contacts.create]

Add a contact to Teamleader

+ Request (application/json)

    + Attributes (object)
        + forename: `John` (string, required) - The given name of the new contact
        + surname: `Smith` (string, required) - The surname of the new contact
        + email: `john@example.com` (string, required) - The email address of the new contact
        + salutation: `Mr` (string, optional)
        + telephone: `1234567` (string, optional)
        + gsm: `7654321` (string, optional)
        + website: `http://example.com` (string, optional)
        + country: `BE` (string, optional) - Country code according to ISO 3166-1 alpha-2. For Belgium: "BE"
        + zipcode: `90201` (string, optional)
        + city: `Cityville` (string, optional)
        + street: `Central Ave` (string, optional)
        + number: `1` (string, optional)
        + address_name_delivery: `Delivery` (string, optional)
        + zipcode_delivery: `90202` (string, optional)
        + city_delivery: `Citytown` (string, optional)
        + street_delivery: `Central Sq` (string, optional)
        + number_delivery: `1` (string, optional)
        + address_name_visiting: `Visiting` (string, optional)
        + zipcode_visiting: `90203` (string, optional)
        + city_visiting: `VilleCity` (string, optional)
        + street_visiting: `Central Str` (string, optional)
        + number_visiting: `1` (string, optional)
        + address_name_invoicing: `Invoicing` (string, optional)
        + zipcode_invoicing: `90204` (string, optional)
        + city_invoicing: `TownCity` (string, optional)
        + street_invoicing: `Central Rd` (string, optional)
        + number_invoicing: `1` (string, optional)
        + invoice_email_address: `invoicing@example.com` (string, optional)
        + language: `EN` (string, optional) - Language code according to ISO 639-1. For Dutch: "NL"
        + gender: `M` (enum[string], optional)
            + Members
                + M
                + F
                + U
        + dob: `1454604273` (number, optional) - Unix timestamp
        + description: `Met at expo` (string, optional) - Background information on the contact
        + newsletter: `true` (boolean, optional)
        + add_tag_by_string: `expo upsell` (string, optional) - Pass one or more tags, comma-separated. Existing tags will be reused, other tags will be automatically created for you.
        + automerge_by_name: `true` (boolean, optional)
            If this flag is set to 1, Teamleader will merge this info into an existing contact with the same forename and surname, if it finds any.
            + Default: `false`
        + automerge_by_email: `true` (boolean, optional)
            If this flag is set to 1, Teamleader will merge this info into an existing contact with the same email address, if it finds any.
            + Default: `false`
        + custom_field_ID: `bar` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)
        + tracking string: `foo` (string, optional) - Title of the activity
        + tracking_long: `foobar` (string, optional) - Description of the activity

+ Response 201 (application/json)

    + Attributes
        + data (object)
            + id: `1` (number)

### contacts.update [POST /contacts.update]

Update a Teamleader contact

+ Request (application/json)

    + Attributes (object)
        + contact_id: `1` (number, required) - The ID of the contact you want to update
        + track_changes: `1` (number, required) - If set to 1, all changes are logged and visible to users in the web-interface
        + forename: `John` (string) - The given name of the new contact
        + surname: `Smith` (string) - The surname of the new contact
        + email: `john@example.com` (string, required) - The email address of the new contact
        + telephone: `1234567` (string, optional)
        + gsm: `7654321` (string, optional)
        + fax: `7654321` (string, optional)
        + website: `http://example.com` (string, optional)
        + country: `BE` (string, optional) - Country code according to ISO 3166-1 alpha-2. For Belgium: "BE"
        + zipcode: `90201` (string, optional)
        + city: `Cityville` (string, optional)
        + street: `Central Ave` (string, optional)
        + number: `1` (string, optional)
        + language: `EN` (string, optional) - Language code according to ISO 639-1. For Dutch: "NL"
        + gender: `M` (enum[string], optional)
            + Members
                + M
                + F
                + U
        + dob: `1454604273` (number, optional) - Unix timestamp
        + description: `Met at expo` (string, optional) - Background information on the contact
        + linked_company_ids: `1,2` (string, optional) - Comma-separated list of company IDs that should be linked to this contact. (overwrites existing links)
        + add_tag_by_string: `expo upsell` (string, optional) - Pass one or more tags, comma-separated. Existing tags will be reused, other tags will be automatically created for you.
        + remove_tag_by_string: `upsell` (string, optional) - Pass one or more tags, comma-separated. These tags will be removed from the contact.
        + custom_field_ID: `bar` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)

+ Response 204

### contacts.delete [POST /contacts.delete]

Delete a contact from Teamleader

+ Request (application/json)

    + Attributes (object)
        + contact_ID: `1` (number, required) - The account ID of the contact you wish to delete

+ Response 204

### contacts.linkToCompany [POST /contacts.linkToCompany]

Linking a contact to a company

+ Request (application/json)

    + Attributes (object)
        + contact_id: `123` (number, required) - The ID of a contact
        + company_id: `5` (number, required) - The ID of a company

+ Response 204

### contacts.unlinkFromCompany [POST /contacts.unlinkFromCompany]

Unlinking a contact from a company

+ Request (application/json)

    + Attributes (object)
        + contact_id: `123` (number, required) - The ID of a contact
        + company_id: `5` (number, required) - The ID of a company

+ Response 204

## Companies [/companies]

### companies.list [GET /companies.list]

Search companies

+ Request (application/json)

    + Attributes (object)
        + filter (object, optional)
            + tag: `upsell` (string, optional) - Company tag. Teamleader will only return companies that have the tag.
            + modified_since: `2017-04-26T10:01:49+00:00` (string, optional) - ISO 8601 date. Teamleader will only return contacts that have been added or modified since that date.
            + term: `teamleader` (string, optional) - A search string. Teamleader will try to match each part of the string to the forename, surname, company name and email address.
        + page (object, optional)
            + size: `20` (number, optional) - The amount of contacts returned per request, max 1 to 100
                + Default: `20`
            + number: `1` (number, optional) - The current page, the first page is 1
                + Default: `1`

+ Response 200 (application/json)

    + Attributes (object)
        + data (array[Company])

### companies.info [GET /companies.info]

Get company info

+ Request (application/json)

    + Attributes (object)
        + company_id: 123 (number)

+ Response 200 (application/json)

    + Attributes (object)
        + data (CompanyDetail)

### companies.add [POST /companies.create]

Add a Teamleader company

+ Request (application/json)

    + Attributes (object)
        + name: `1` (string, required)
        + email: `john@example.com` (string, required) - The email address of the new contact
        + vat_code: `Mr` (string, optional)
        + telephone: `1234567` (string, optional)
        + country: `7654321` (string, optional)
        + zipcode: `90201` (string, optional)
        + city: `Cityville` (string, optional)
        + street: `Central Ave` (string, optional)
        + number: `1` (string, optional)
        + address_name_delivery: `Delivery` (string, optional)
        + zipcode_delivery: `90202` (string, optional)
        + city_delivery: `Citytown` (string, optional)
        + street_delivery: `Central Sq` (string, optional)
        + number_delivery: `1` (string, optional)
        + address_name_visiting: `Visiting` (string, optional)
        + zipcode_visiting: `90203` (string, optional)
        + city_visiting: `VilleCity` (string, optional)
        + street_visiting: `Central Str` (string, optional)
        + number_visiting: `1` (string, optional)
        + address_name_invoicing: `Invoicing` (string, optional)
        + zipcode_invoicing: `90204` (string, optional)
        + city_invoicing: `TownCity` (string, optional)
        + street_invoicing: `Central Rd` (string, optional)
        + number_invoicing: `1` (string, optional)
        + invoice_email_address: `invoicing@example.com` (string, optional)
        + website: `http://example.com` (string, optional)
        + description: `Met at expo` (string, optional) - Background information on the contact
        + account_manager_id: `1` (number, optional)
        + local_business_number: `BE0123.123.123` (string, optional) - the local business number (KVK in the Netherlands)
        + business_type: `NV` (string, optional) - containing the company type (eg NV, BVBA,..)
        + language: `EN` (string, optional) - Language code according to ISO 639-1. For Dutch: "NL"
        + add_tag_by_string: `expo upsell` (string, optional) - Pass one or more tags, comma-separated. Existing tags will be reused, other tags will be automatically created for you.
        + automerge_by_name: `true` (boolean, optional)
            If this flag is set to 1, Teamleader will merge this info into an existing contact with the same forename and surname, if it finds any.
            + Default: `false`
        + automerge_by_email: `true` (boolean, optional)
            If this flag is set to 1, Teamleader will merge this info into an existing contact with the same email address, if it finds any.
            + Default: `false`
        + custom_field_ID: `bar` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)

+ Response 201 (application/json)

    + Attributes
        + data (object)
            + id: `1` (number)

### companies.update [POST /companies.update]

Update a Teamleader company

+ Request (application/json)

    + Attributes (object)
        + company_id: `1` (number, required) - The ID of the contact you want to update
        + track_changes: `1` (number, required) - If set to 1, all changes are logged and visible to users in the web-interface
        + name: `1` (string, required)
        + email: `john@example.com` (string, required) - The email address of the new contact
        + vat_code: `Mr` (string, optional)
        + telephone: `1234567` (string, optional)
        + fax: `7654321` (string, optional)
        + country: `7654321` (string, optional)
        + zipcode: `90201` (string, optional)
        + city: `Cityville` (string, optional)
        + street: `Central Ave` (string, optional)
        + number: `1` (string, optional)
        + invoice_email_address: `invoicing@example.com` (string, optional)
        + website: `http://example.com` (string, optional)
        + description: `Met at expo` (string, optional) - Background information on the contact
        + account_manager_id: `1` (number, optional)
        + local_business_number: `BE0123.123.123` (string, optional) - the local business number (KVK in the Netherlands)
        + business_type: `NV` (string, optional) - containing the company type (eg NV, BVBA,..)
        + language: `EN` (string, optional) - Language code according to ISO 639-1. For Dutch: "NL"
        + add_tag_by_string: `expo upsell` (string, optional) - Pass one or more tags, comma-separated. Existing tags will be reused, other tags will be automatically created for you.
        + remove_tag_by_string: `upsell` (string, optional) - Pass one or more tags, comma-separated. These tags will be removed from the contact.
        + custom_field_ID: `bar` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)

+ Response 204

### companies.delete [POST /companies.delete]

Delete a company from Teamleader

+ Request (application/json)

    + Attributes (object)
        + company_id: `1` (number, required) - The account ID of the company you wish to delete

+ Response 204

### companyTypes.list [GET /companyTypes.list]

Get the names of business types (legal structures) a company can have within a certain country.

+ Request (application/json)

    + Attributes (object)
        + country: `BE` (string) -  country code according to ISO 3166-1 alpha-2. For Belgium: "BE"

+ Response 200 (application/json)

    + Attributes (object)
        + data (array[CompanyType])

## Deals [/deals]

### deals.list [GET /deals.list]

Get a list of all deals

+ Request (application/json)

    + Attributes (object)
        + page (object, optional)
            + size: `10` (number, optional) - Amount of results you want
                + Default: `20`
            + number: `1` (number, optional) - Page of results you want
                + Default: `1`
        + filter (object, optional)
            + term: `Teamleader` (string, optional) - A search string. Teamleader will try to search deals matching this string.
            + phase_id: `5` (number, optional) - Only return deals with this phase ID
            + company_id: `123` (number, optional) - Only return deals for this company
            + contact_id: `456` (number, optional) - Only return deals for this contact
            + project_id: `789` (number, optional) - Only return deals for this project

+ Response 200 (application/json)

    + Attributes (object)
        + data (array[Deal])

### deals.info [GET /deals.info]

Get deal details

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (number, required) - ID of the deal you want

+ Response 200 (application/json)

    + Attributes (object)
        + data (Deal)

### deals.create [POST /deals.create]

Create a deal for a contact or company.

+ Request (application/json)

    + Attributes (object)
        + contact_or_company: `company` (enum[string], required) - Who is related to this deal?
            + Members
                + company
                + contact
        + contact_or_company_id: `1` (number, required) - ID of the related contact or company
        + title: `Interesting business deal` (string, required)
        + source: `Google Adwords` (string, required)
        + description_1: `Search module` (string, required)
        + price_1: `5` (number, required)
        + amount_1: `1` (number, required)
        + vat_1: `21` (enum[string], required) - The vat tariff for this line
            + Members
                + 00
                + 06
                + 12
                + 21
                + CM
                + EX
                + MC
                + VCMD
        + product_id_1: `1` (number, optional) - ID of the product
        + account_1: `1` (number, optional) - ID of the bookkeeping account
        + subtitle_1: `Enable search` (string, optional)
        + custom_field_ID: `1` (number, optional) - replace ID by the ID of your custom field.
        + sys_department_id: `1` (number, optional) - ID of the department the deal will be added to
        + responsible_sys_client_id: `1` (number, optional) - ID of the user that is responsible for this deal
        + phase_id: `1` (number, optional) - new phase ID this deal should be moved to
        + description: `1` (string, optional) - If this parameter is filled out a quotation (PDF) is generated by Teamleader using the text provided and the items. The PDF is accessible via the web interface.
        + budget_estimation: `10` (number, optional) - budget estimation for this deal. This value will be overwritten once a quotation is made for this deal
        + optional_contact_id: `1` (number, optional) - if this deal is related to a company, you can specify the ID of a related contact within that company via this parameter
        + filter_double_sales: `0` (number, optional) - if set to 1, an extra check added to make sure the deal isn't a double of the previous one.'

+ Response 201 (application/json)

    + Attributes
        + data (object)
            + id: `1` (number)

### deals.update [POST /deals.update]

Update a deal.

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (number, required) - Who is related to this deal?
        + title: `Interesting business deal` (string, optional)
        + source: `Google Adwords` (string, optional)
        + responsible_sys_client_id: `1` (number, optional) - ID of the user that is responsible for this deal
        + phase_id: `1` (number, optional) - new phase ID this deal should be moved to
        + budget_estimation: `10` (number, optional) - budget estimation for this deal. This value will be overwritten once a quotation is made for this deal
        + custom_field_ID: `1` (number, optional) - replace ID by the ID of your custom field.

+ Response 204

### deals.items.update [POST /deals.items.update]

Update a deal's items

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (number, required) - Who is related to this deal?
        + description_1: `Search module` (string, required)
        + price_1: `5` (number, required)
        + amount_1: `1` (number, required)
        + vat_1: `21` (enum[string], required) - The vat tariff for this line
            + Members
                + 00
                + 06
                + 12
                + 21
                + CM
                + EX
                + MC
                + VCMD
        + product_id_1: `1` (number, optional) - ID of the product
        + account_1: `1` (number, optional) - ID of the bookkeeping account
        + subtitle_1: `Enable search` (string, optional)

+ Response 204

### deals.quotation.send [POST /deals.quotation.emailToClient]

Send a deal's quotation via email to a client

+ Request (application/json)

    + Attributes (object)
        + sale_id: `1` (number, required) - ID of the deal
        + email: `john@example.com` (string, required) - Email of the client
        + subject: `1` (number, required) - Subject of the email
        + message: `1` (number, required) -  Add <link> to the message to print out the InvoiceCloud link. (not required when using an email template, leave empty or discard from request when using template_id)
        + template_id: `1` (number, optional) - ID of the email message created in Teamleader.

+ Response 204

### dealPhases.list [GET /dealPhases.list]

Get a list of all phases a deal can go through

+ Response 200 (application/json)

    + Attributes (object)
        + data (array)
            + (object)
                + id: 1 (number)
                + name: `New` (string)

### dealSources.list [GET /dealSources.list]

Get a list of all deal sources

+ Response 200 (application/json)

    + Attributes (object)
        + data (array)
            + (object)
                + id: 1 (number)
                + name: `Google Search` (string)

## Files [/files]

### files.list [GET /files.list]

Get a list of all files relating to an object

+ Request (application/json)

    + Attributes (object)
        + amount: `20` (number, required) - The amount of contacts returned per request, max 1 to 100
        + pageno: `0` (number, required) - The current page, the first page is 0
        + object_type: `contact` (enum[string], required) - The type of object
            + Members
                + contact
                + company
                + sale
                + ticket
                + project
                + meeting
        + object_id: `1` (number, required) - ID of the object
        + folder_name: `cat_pictures` (string, optional) - the folder name of which the contents should be displayed

+ Response 200 (application/json)

    + Attributes (object)
        + data (array)
            + (object)
                + id: `101` (number)
                + filename: `cat.bmp` (string)
                + date_last_edited: `1492673227` (number)
                + filesize_bytes: `256` (number)

### files.info [GET /files.info]

Get a info about a specific file

+ Request (application/json)

    + Attributes (object)
        + file_id: `20` (number, required) - The file's ID

+ Response 200 (application/json)

    + Attributes (object)
        + data (object)
            + filename: `cat.bmp` (string)
            + filesize_bytes: `256` (number)
            + uploader_client_id: `1` (number)
            + related_object_type: `contact` (string)
            + related_object_id: `1` (number)
            + folder: `pics` (string)
            + date_last_edited: `2017-04-20T07:27:07+00:00` (string)

### files.download [GET /files.download]

Get a signed URL where the file can be downloaded. The signed URL will remaing valid for 30 seconds.

+ Request (application/json)

    + Attributes (object)
        + file_id: `20` (number, required) - The file's ID

+ Response 200 (application/json)

    + Attributes (object)
        + data (object)
            + signed_download_url: `http://example.com/cat.bmp` (string)

### files.upload [POST /files.upload]

Get a signed URL where the file can be downloaded. The signed URL will remaing valid for 30 seconds.

+ Request (application/json)

    + Attributes (object)
        + object_type: `contact` (enum[string], required) - The type of object
            + Members
                + contact
                + company
                + sale
                + ticket
                + project
                + meeting
        + object_id: `1` (number, required) - ID of the object
        + file_content: `TG9yZW0gSXBzdW0gaXMgc2ltcGx5IGR1bW15IHRleHQgb2YgdGhlIHByaW50aW5nIGFuZCB0eXBlc2V0dGluZyBpbmR1c3RyeS4=` (string, required) - Base64 encoded version the file
        + file_name: `cat.bmp` (string, required) - Name of the file, including extension
        + folder_name: `cat_pictures` (string, optional) - the folder name of which the contents should be displayed

+ Response 201 (application/json)

    + Attributes (object)
        + data (object)
            + id: `123` (number)

### files.delete [POST /files.delete]

Delete a file

+ Request (application/json)

    + Attributes (object)
        + file_id: `20` (number, required) - The file's ID

+ Response 204

## Webhooks [/webhooks]

### /webhooks.register [POST /webhooks.register]

Register a webhook.

+ Request (application/json)

    + Attributes (object)
        + url: `https://www.mywebhookurl.com` (string, required) - Your webhook url
        + types: `["CONTACT_ADDED", "CONTACT_EDITED"]` (array[enum[string]], required) - Array of event types that should fire the webhook
            + Members
                + CONTACT_ADDED
                + CONTACT_EDITED
                + CONTACT_DELETED
                + COMPANY_ADDED
                + COMPANY_EDITED
                + COMPANY_DELETED
                + RELATED_CONTACTS_UPDATED
                + SALE_ADDED
                + SALE_QUOTATION
                + SALE_PHASE_CHANGED
                + SALE_ACCEPTED
                + SALE_REFUSED
                + SALE_DELETED
                + MEETING_ADDED
                + MEETING_EDITED
                + MEETING_CANCELLED
                + TASK_ADDED
                + TASK_EDITED
                + TASK_FINISHED
                + TASK_DELETED
                + TIMETRACKING_ADDED
                + TIMETRACKING_EDITED
                + TIMETRACKING_DELETED
                + INVOICE_ADDED
                + INVOICE_UPDATED
                + INVOICE_SENT
                + INVOICE_PAID
                + INVOICE_NOT_PAID
                + INVOICE_DELETED
                + CREDITNOTE_ADDED
                + CREDITNOTE_UPDATED
                + CREDITNOTE_SENT
                + CREDITNOTE_DELETED
                + PRODUCT_ADDED
                + PRODUCT_EDITED
                + PRODUCT_DELETED
                + PROJECT_ADDED
                + PROJECT_EDITED
                + PROJECT_DELETED
                + MILESTONE_ADDED
                + MILESTONE_EDITED
                + MILESTONE_CLOSED
                + MILESTONE_DELETED
                + TICKET_ADDED
                + TICKET_EDITED
                + TICKET_NEW_MESSAGE
                + TICKET_CLOSED
                + FILE_ADDED
                + FILE_EDITED
                + FILE_DELETED
                + CUSTOM_FIELD_ADDED
                + CUSTOM_FIELD_EDITED
                + CUSTOM_FIELD_DELETED
                + USER_DAYS_OFF_EDITED
                + COMPANY_CLOSING_DAYS_EDITED

+ Response 204

# Data Structures

## Company (object)
+ id: `123` (number)
+ name: `Pied Piper` (string)
+ taxcode: `BE 0899.623.035` (string)
+ business_type: `NV` (string)
+ street: `Newell Road` (string)
+ number: `5230` (string)
+ zipcode: `94020` (string)
+ city: `Palo Alto` (string)
+ country: `US` (string)
+ website: `https://piedpiper.com` (string)
+ email: `info@piedpiper.eu` (string)
+ telephone: `09 298 06 15` (string)
+ fax: `09 123 45 67` (string)
+ iban: `BE12 1234 1234 1234` (string)
+ bic: `BICBANK` (string)
+ language_code: `NL` (string)
+ language_name: `Nederlands` (string)
+ date_added: `2016-02-04T16:44:33+00:00` (string)
+ date_edited: `2016-02-05T16:44:33+00:00` (string)
+ status (string)
+ vat_liability: `vat_liable` (string)
+ payment_term: `30 days` (string)
+ deleted: `false` (boolean)

## CompanyDetail (object)
+ id: `123` (number)
+ name: `Pied Piper` (string)
+ street: `Newell Road` (string)
+ number: `5230` (string)
+ zipcode: `94020` (string)
+ city: `Palo Alto` (string)
+ country: `US` (string)
+ taxcode: `BE 0899.623.035` (string)
+ kvk_nummer: `12345678` (string)
+ local_business_number: `01234` (string)
+ email: `info@piedpiper.eu` (string)
+ website: `https://piedpiper.com` (string)
+ telephone: `09 298 06 15` (string)
+ fax: `09 123 45 67` (string)
+ iban: `BE12 1234 1234 1234` (string)
+ bic: `BICBANK` (string)
+ pricelist_id: `9` (number)
+ account_manager_id: `5` (number)
+ date_added: `2016-02-04T16:44:33+00:00` (string)
+ tags: `[tag1,tag2]` (array[string])
+ language_code: `NL` (string)
+ business_type: `NV` (string)
+ vat_liability: `vat_liable` (string)
+ sector_name: `finance` (string)
+ invoice_email_address: `invoice@piedpiper.com` (string)
+ payment_term: `30 days` (string)
+ extra_addresses (array[string])
+ background_info_html (string)
+ related_companies (string)
+ deleted: `false` (boolean)
+ custom_fields (array)
+ external_customer_id (string)

## CompanyType (object)
+ name: `BVBA` (string)

## Contact (object)
+ id: `456` (number)
+ forename: `Erlich` (string)
+ surname: `Bachman` (string)
+ salutation: `Mr` (string)
+ street: `Newell Road` (string)
+ number: `5230` (string)
+ zipcode: `94020` (string)
+ city: `Palo Alto` (string)
+ country: `US` (string)
+ website: `https://piedpiper.com` (string)
+ email: `info@piedpiper.eu` (string)
+ gsm: `0412 12 12 12` (string)
+ telephone: `09 298 06 15` (string)
+ fax: `09 123 45 67` (string)
+ gender: `M` (enum[string])
    + Members
        + M
        + F
        + U
+ dob: `1987-04-25T11:00:00+00:00` (string)
+ iban: `BE12 1234 1234 1234` (string)
+ bic: `BICBANK` (string)
+ tags: `[tag1,tag2]` (array[string])
+ language_code: `EN` (string)
+ date_added: `2016-02-04T16:44:33+00:00` (string)
+ date_edited: `2016-02-05T16:44:33+00:00` (string)
+ deleted: `false` (boolean)
+ status (string)

## ContactDetail (object)
+ id: `456` (number)
+ forename: `Erlich` (string)
+ surname: `Bachman` (string)
+ salutation: `Mr` (string)
+ street: `Newell Road` (string)
+ number: `5230` (string)
+ zipcode: `94020` (string)
+ city: `Palo Alto` (string)
+ country: `US` (string)
+ website: `https://piedpiper.com` (string)
+ email: `info@piedpiper.eu` (string)
+ gsm: `0412 12 12 12` (string)
+ telephone: `09 298 06 15` (string)
+ fax: `09 123 45 67` (string)
+ gender: `M` (enum[string])
+ dob: `1987-04-25T11:00:00+00:00` (string)
+ iban: `BE12 1234 1234 1234` (string)
+ bic: `BICBANK` (string)
+ tags: `[tag1,tag2]` (array[string])
+ language_code: `EN` (string)
+ date_added: `2016-02-04T16:44:33+00:00` (string)
+ extra_addresses (array[string])
+ deleted: `false` (boolean)
+ custom_fields (array)
+ linked_company_ids (string)
+ linked_company_names (array[string])
+ linked_company_functions (string)
+ background_info_html (string)
+ external_customer_id (string)

## CreditNote (object)
+ id: `173111` (number)
+ creditnote_nr: `5` (number)
+ creditnote_nr_detailed: `2017 / 5 (MAIN)` (string)
+ date: `2016-02-04T16:44:33+00:00` (string)
+ date_paid: `2016-02-04T16:44:33+00:00` (string)
+ paid: `true` (boolean)
+ total_price_excl_vat: `123.00` (number)
+ total_price_incl_vat: `130.38` (number)
+ name: `De Rode Duivels` (string)
+ contact_or_company: `company` (string)
+ contact_or_company_id: `485906` (number)
+ related_invoice_id: `173111` (number)

## Deal (object)
+ id: `164938` (number)
+ title: `Interesting deal` (string)
+ for: `contact` (string)
+ for_id: `1176793` (number)
+ customer_name: `John`,
+ quotation_nr: `21` (number)
+ total_price_excl_vat: `0.00` (number)
+ probability: `5` (number)
+ phase_id: `5` (number)
+ responsible_user_id: `-1` (number)
+ entry_date: `2017-05-09T11:25:11+00:00` (number)
+ latest_activity_date: `2017-05-09T11:30:58+00:00` (number)
+ close_date: `2017-05-09T11:31:15+00:00` (number)
+ date_lost: `2017-05-09T11:31:30+00:00` (number)
+ reason_refused: `No interest` (string)
+ source_id: `8799` (number)

## DealPhase (object)
+ deal_id: `1` (number)
+ phase_id: `5` (number)

## Department (object)
id: `1` (number)
name: `Sales` (string)

## Invoice (object)
+ id: `173111` (number)
+ invoice_nr: `5` (number)
+ invoice_nr_detailed: `2017 / 5 (MAIN)` (string)
+ date: `2016-02-04T16:44:33+00:00` (string)
+ due_date: `2016-02-04T16:44:33+00:00` (string)
+ date_paid: `2016-02-04T16:44:33+00:00` (string)
+ paid: `true` (boolean)
+ total_price_excl_vat: `123.00` (number)
+ total_price_incl_vat: `130.38` (number)
+ name: `De Rode Duivels` (string)
+ for_attention_of: `Radja Nainggolan` (string)
+ incasso_recall_costs: `0.00` (number)
+ incasso_interest_amount: `0.00` (number)
+ structured_communication: `+++000/1731/11048+++` (string)
+ contact_or_company: `company` (string)
+ contact_or_company_id: 485906 (number)

## Tag (object)
id: `1` (number)
name: `A Tag` (string)

## User (object)
id: `1` (number)
name: `John Smith` (string)
email: `john@teamleader.eu` (string)
gsm: `+32412654321` (string)
telephone: `+3291239843` (string)
team_id: `1` (number)
title: `Sales` (string)
active: `true` (boolean)

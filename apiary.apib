FORMAT: 1A
HOST: https://api.teamleader.eu

# Teamleader API

#### WARNING - This is still a BETA version.

Our documentation is already published to gather feedback, but the endpoints are not working yet. This documentation is not final and will change before our final release.

## AP-What?

An API is a Application Programming Interface. It is used to programmaticaly interact with Teamleader, to integrate with other software tools or to add custom functionality to Teamleader.

Before creating a new integration, be sure to check out our **[Marketplace](https://marketplace.teamleader.eu)** for existing integrations built by the community. We also have a trusted [partner network](https://www.teamleader.eu) if you are looking for help building a custom integration.

## General principles

### RPC

Our API consists of HTTP RPC-style methods, in the form of `https://api.teamleader.eu/resource.action`.

We chose this RPC-style approach over the more popular REST, because it enables us to have domain related actions on resources such as `invoices.book`, `timetracking.start` and `timetracking.stop`.

### Requests

All methods must be called using HTTPS. Data can be passed as JSON data in a POST request or as GET query parameters.

For more complex actions we recommend using POST requests with JSON:

```
POST https://api.teamleader.eu/invoices.list

{
    "filter": {
        "department_id": 1
    },
    "page": {
        "size": 50,
        "number": 3
    },
    "company_id": 1234
}
```

The GET equivalent:

```
GET https://api.teamleader.eu/invoices.list?filter[department_id]=1&page[number]=3&page[size]=50&company_id=1234
```

### Responses

All data is returned as JSON objects:

```
{
    "id": 456,
    "first_name": "Erlich",
    "last_name": "Bachman",
    "salutation": "Mr",
    "email": "info@piedpiper.eu"
}
```

### Collections

When a collection of objects are returned, they are nested in an `_items` property. This allows us to add additional meta data to the collection for pagination etc.

```
{
    "_items": [
        { "foo": "bar" },
        { "foo": "baz" },
        { "foo": "boo" },
    ],
    "_meta": {
        "total": 3
    }
}
```

### Errors

Errors are always returned as an array of error objects under an `errors` top level property.

```
{
    "errors": [
        {
            "status": 400,
            "title": "Bad request"
        }
    ]
}
```

### Status codes

When objects are created, we return a `201` response containing the id of the resource. When objects are updated or actions are performated, we othen return an empty response with a `204` status code.

Common used status codes:

 - `200` - OK
 - `201` - Created, when resources are created
 - `204` - No Content, on resource updates or actions
 - `400` - Bad Request, if the request contains invalid data
 - `401` - Unauthorized, invalid or missing access token
 - `404` - Not Found, resource not found
 - `500` - Internal Server Error, something went wrong on our end

## OAuth 2

OAuth 2 is an authorization framework that lets your integration request authorization to data in a user's Teamleader account without getting their password.

Before starting you will need to register your integration on our [marketplace](https://marketplace.teamleader.eu). Each integration is assigned a unique `client_id` and `client_secret` which will be used in the OAuth flow. Note that the `client_secret` key should not be shared.

### Authorization

To authenticate users for your integration, redirect the user to the Teamleader authorization page:

`https://app.teamleader.eu/oauth2/authorize`

With the following values as GET parameters:

 - `client_id` - issued when you create your integration
 - `response_type` - must be "code"
 - `state` - unique string to be passed back upon completion (optional)
 - `redirect_uri` - URL to redirect back to after authorization

The user will then be asked to login to Teamleader server and authorize your integration. If the user approves the client they will be redirected to the previously specified `redirect_uri` with a temporary authorization code and the original state parameter if it was provided. If the states don't match, the request may have been created by a third party and you should abort the process.

`https://YOUR_REDIRECT_URI?code=CODE&state=STATE`

If the user denies your request, we will redirect back to the `redirect_uri` with an `error` parameter:

`https://YOUR_REDIRECT_URI?error=access_denied`

With the authorization code that was sent back to your `redirect_uri`, you can request an access token to make API calls. Note that authorization codes can only be exchanged for an access token once and expire 10 minutes after issuance.

`https://app.teamleader.eu/oauth2/access_token`

The following values should be passed as POST parameters:

 - `client_id` - issued when you register your integration
 - `client_secret` - issued when you register your integration
 - `code` - the authorization code
 - `grant_type` - must be "authorization_code"
 - `redirect_uri` - the original submitted redirect URL

You will receive a JSON response containing an `access_token` and `refresh_token`:

```
{
    "token_type": "Bearer",
    "expires_in": 3600,
    "access_token": ACCESS_TOKEN,
    "refresh_token": REFRESH_TOKEN
}
```

Use this access token to make API calls on behalf of the user using the `Authorization` header. Example request:

```
GET https://api.teamleader.eu/contacts.list HTTP/1.1
Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciO...
Accept: application/json
```

### Refresh tokens

Access tokens expire shortly (1 hour) after they are issued for security reasons. If your integration needs to communicate with the API beyond the access token's lifespan you will need to request a new access token using the refresh token which was issued with the access token. Note that refresh tokens can only used once to get a new access token and refresh token.

`https://app.teamleader.eu/oauth2/access_token`

The following values should be passed as POST parameters:

 - `client_id` - issued when you register your integration
 - `client_secret` - issued when you register your integration
 - `refresh_token` - the refresh token
 - `grant_type` - must be "refresh_token"

Refresh tokens will continue functioning until the user uninstalls your integration.

### Client side authentication (implicit grant)

Your client secret must remain private and can not be embedded within client side applications such as browser plugins. For these types of applications we have an alternative authentication method called [implicit grant](https://tools.ietf.org/html/rfc6749#section-1.3.2). The implicit grant is a simplified authorization code flow optimized for clients implemented in a browser using a scripting language such as JavaScript. In the implicit flow, instead of issuing the client an authorization code, the client is issued an access token directly.

Similar to the regular authentication flow, users are redirected to the Teamleader authorization page, but with different query parameters:

`https://app.teamleader.eu/oauth2/authorize`

The following values should be passed as GET parameters:

 - `client_id` - issued when you create your integration
 - `response_type` - must be "token" (instead of "code")
 - `state` - unique string to be passed back upon completion (optional)
 - `redirect_uri` - URL to redirect back to after authorization

If the user approves the client, they will be redirected back to the authorization server with the following parameters in the **fragment part of the url**:

 - `token_type` - with the value "Bearer"
 - `expires_in` - the TTL for this access token in seconds
 - `access_token` - the access token
 - `state` - the state parameter sent in the original request

Example url:

`https://YOUR_REDIRECT_URI#token_type=Bearer&expires_in=900&access_token=TOKEN&state=STATE`

Note that this implicit grant does not return refresh tokens, and that our access tokens have a short TTL value. If you opt for this authentication method, you will have to go through the authorization flow every time you want to make API calls on behalf of the user. Keep this in mind while developing client side applications.

### User Identity

To retrieve information about the user who authorized your application (the resource owner), you can call the following endpoint:

`https://app.teamleader.eu/api/account/me`

## General [/]

### users.list [GET /users.list]

Get a list of all users

+ Response 200 (application/json)

    + Attributes (object)
        + _items (array)
            + (object)
                + id: `1` (number)
                + name: `John Smith` (string)
                + email: `john@teamleader.eu` (string)
                + gsm: `+32412654321` (string)
                + phone: `+3291239843` (string)
                + team (object)
                    + id: 1 (number)
                + title: `Sales` (string)
                + active: `true` (boolean)

### tags.list [GET /tags.list]

Get a list of all tags

+ Response 200 (application/json)

    + Attributes (object)
        + _items : expo, upsell (array[string])

## Calendar entries [/calendar-entries]

### calendarEntries.list [GET /calendarEntries.list]

Search calendar entries

+ Request (application/json)

    + Attributes (object)
        + filter (object, required)
            + employee_id: `1` (number, required) - Use this to filter by employee
            + start_date: `2017-01-01` (string, required) - Format ISO 8601: yyyy-mm-dd
            + end_date: `2017-01-01` (string, required) - Format ISO 8601: yyyy-mm-dd

+ Response 200 (application/json)

    + Attributes (object)
        + _items (array)
            + (object)
                + id: `123` (number)
                + name: `Erlich Bachman's birthday` (string)
                + date: `2017-05-16` (string)
                + duration: `140` (number)

## Contacts [/contacts]

### contacts.list [GET /contacts.list]

Get a paginated list of contacts

+ Request (application/json)

    + Attributes (object)
        + filter (object, optional)
            + ids (array[string], optional)
            + company_id: `1` (string, optional) - Filter contacts by a certain company.
            + term: `teamleader` (string, optional)
            + updated_since: `2017-04-26T10:01:49+00:00` (string, optional) - ISO 8601 date. Teamleader will only return contacts that have been added or modified since that time (inclusive).
        + page (object, optional)
            + size: `20` (number, optional) - Amount of contacts you want returned, 1 to 100.
                + Default: `20`
            + number: `1` (number, optional) - The numerated page you want, starts at 1.
                + Default: `1`

+ Response 200 (application/json)

    + Attributes (object)
        + _items (array)
            + (object)
                + id: `456` (string)
                + first_name: `Erlich` (string)
                + last_name: `Bachman` (string)
                + salutation: `Mr` (string)
                + email: `info@piedpiper.eu` (string)
                + phone: `092980615` (string)
                + mobile: `0412121212` (string)
                + fax: `091234567` (string)
                + website: `https://piedpiper.com` (string)
                + avatar (string)
                + address (Address)
                + gender: `M` (enum[string])
                    + Members
                        + M
                        + F
                        + U
                + birthdate: `1987-04-25` (string)
                + iban: `BE12123412341234` (string)
                + bic: `BICBANK` (string)
                + tags (object)
                    + _items: tag1, tag2 (array[string])
                + custom_fields (object)
                    + _items (array)
                        + (object)
                            + field (object)
                                + _type: `customField` (string)
                                + id: 123 (string)
                            + value: `092980616`
                + companies (object)
                    + _items (array)
                        + (object)
                            + position: `CEO` (string)
                            + decision_maker: true (boolean)
                            + company (object)
                                + _type: `company` (string)
                                + id: 123 (string)
                + language: `en` (string)
                + _meta (object)
                    + added_at: `2016-02-04T16:44:33+00:00` (string)
                    + updated_at: `2016-02-05T16:44:33+00:00` (string)

### contacts.info [GET /contacts.info]

Get the details for a single contact

+ Request (application/json)

    + Attributes (object)
        + `contact_id`: `1` (string, required)

+ Response 200 (application/json)

    + Attributes (object)
        + id: `456` (string)
        + first_name: `Erlich` (string)
        + last_name: `Bachman` (string)
        + salutation: `Mr` (string)
        + email: `info@piedpiper.eu` (string)
        + invoice_email: `invoicing@example.com` (string)
        + phone: `092980615` (string)
        + mobile: `0412121212` (string)
        + fax: `091234567` (string)
        + website: `https://piedpiper.com` (string)
        + avatar (string)
        + address (Address)
        + delivery_address (Addressee)
        + visiting_address (Addressee)
        + invoice_address (Addressee)
        + gender: `M` (enum[string])
            + Members
                + M
                + F
                + U
        + birthdate: `1987-04-25` (string)
        + iban: `BE12123412341234` (string)
        + bic: `BICBANK` (string)
        + tags (object)
            + _items: tag1, tag2 (array[string])
        + custom_fields (object)
            + _items (array)
                + (object)
                    + field (object)
                        + _type: `customField` (string)
                        + id: 123 (string)
                    + value: `092980616`
        + companies (object)
            + _items (array)
                + (object)
                    + position: `CEO` (string)
                    + decision_maker: true (boolean)
                    + company (object)
                        + _type: `company` (string)
                        + id: 123 (string)
        + language: `en` (string)
        + remarks: `First contact at expo` (string)
        + _meta (object)
            + added_at: `2016-02-04T16:44:33+00:00` (string)
            + updated_at: `2016-02-05T16:44:33+00:00` (string)

### contacts.add [POST /contacts.add]

Add a contact to Teamleader

+ Request (application/json)

    + Attributes (object)
        + first_name: `John` (string, required) - The first name of the new contact
        + last_name: `Smith` (string, required) - The last name of the new contact
        + email: `john@example.com` (string, required) - The email address of the new contact
        + salutation: `Mr` (string, optional)
        + email: `john@example.com` (string, required) - The email address of the new contact
        + phone: `1234567` (string, optional)
        + mobile: `7654321` (string, optional)
        + fax: `7654321` (string, optional)
        + website: `http://example.com` (string, optional)
        + address (Address, optional)
        + delivery_address (Addressee, optional)
        + visiting_address (Addressee, optional)
        + invoice_address (Addressee, optional)
        + language: `en` (string, optional) - Language code according to ISO 639-1. For Dutch: "nl"
        + gender: `M` (enum[string], optional)
            + Members
                + M
                + F
                + U
        + birthdate: `1989-08-19` (string, optional)
        + remarks: `Met at expo` (string, optional) - Background information on the contact
        + tags: expo, upsell (array[string], optional) - Pass one or more tags. Existing tags will be reused, other tags will be automatically created for you.
        + custom_fields (array)
            + (object)
                + custom_field_id: 123 (string)
                + value

+ Response 201 (application/json)

    + Attributes (object)
        + id: `1` (string)

### contacts.update [POST /contacts.update]

Update a Teamleader contact

+ Request (application/json)

    + Attributes (object)
        + contact_id: `1` (string, required) - The ID of the contact you want to update
        + first_name: `John` (string) - The given name of the new contact
        + last_name: `Smith` (string) - The last name of the new contact
        + salutation: `Mr` (string, optional)
        + email: `john@example.com` (string, required) - The email address of the new contact
        + phone: `1234567` (string, optional)
        + mobile: `7654321` (string, optional)
        + fax: `7654321` (string, optional)
        + website: `http://example.com` (string, optional)
        + address (Address, optional)
        + delivery_address (Addressee, optional)
        + visiting_address (Addressee, optional)
        + invoice_address (Addressee, optional)
        + language: `en` (string, optional) - Language code according to ISO 639-1. For Dutch: "nl"
        + gender: `M` (enum[string], optional)
            + Members
                + M
                + F
                + U
        + birthdate: `1989-08-19` (string, optional)
        + remarks: `Met at expo` (string, optional) - Background information on the contact.
        + tags: expo, upsell (array[string], optional) - Pass one or more tags. Existing tags will be reused, other tags will be automatically created for you.
        + custom_fields (array)
            + (object)
                + custom_field_id: 123 (string)
                + value

+ Response 204

### contacts.delete [POST /contacts.delete]

Delete a contact from Teamleader

+ Request (application/json)

    + Attributes (object)
        + contact_id: `1` (string, required) - The account ID of the contact you wish to delete

+ Response 204

### contacts.tag [POST /contacts.tag]

Add a tag to a contact

+ Request (application/json)

    + Attributes (object)
        + contact_id: `123` (string, required) - The ID of a contact
        + tags: prospect, expo (array[string], required) - A list of tags to add

+ Response 204

### contacts.untag [POST /contacts.untag]

Remove a tag from a contact

+ Request (application/json)

    + Attributes (object)
        + contact_id: `123` (string, required) - The ID of a contact
        + tags: prospect, expo (array[string], required) - A list of tags to remove

+ Response 204

### contacts.linkToCompany [POST /contacts.linkToCompany]

Linking a contact to a company

+ Request (application/json)

    + Attributes (object)
        + contact_id: `123` (string, required) - The ID of a contact
        + company_id: `5` (string, required) - The ID of a company
        + position: `CEO` (string)
        + decision_maker: true (boolean)

+ Response 204

### contacts.unlinkFromCompany [POST /contacts.unlinkFromCompany]

Unlinking a contact from a company

+ Request (application/json)

    + Attributes (object)
        + contact_id: `123` (string, required) - The ID of a contact
        + company_id: `5` (string, required) - The ID of a company

+ Response 204

## Companies [/companies]

### companies.list [GET /companies.list]

Search companies

+ Request (application/json)

    + Attributes (object)
        + filter (object, optional)
            + ids (array[string], optional)
            + tag: `upsell` (string, optional) - Company tag. Teamleader will only return companies that have the tag.
            + updated_since: `2017-04-26T10:01:49+00:00` (string, optional) - ISO 8601 date. Teamleader will only return contacts that have been added or modified since that time (inclusive).
            + term: `teamleader` (string, optional)
        + page (object, optional)
            + size: `20` (number, optional) - The amount of contacts returned per request, max 1 to 100
                + Default: `20`
            + number: `1` (number, optional) - The current page, the first page is 1
                + Default: `1`

+ Response 200 (application/json)

    + Attributes (object)
        + `_items` (array)
            + (object)
                + id: `123` (string)
                + name: `Pied Piper` (string)
                + business_type: `NV` (string)
                + vat_number: `BE0899623035` (string)
                + local_business_number: `63326426` (string)
                + email: `info@piedpiper.eu` (string)
                + invoice_email: `invoicing@example.com` (string, optional)
                + phone: `092980615` (string)
                + fax: `091234567` (string)
                + website: `https://piedpiper.com` (string)
                + avatar (string)
                + address (Address)
                + iban: `BE12123412341234` (string)
                + bic: `BICBANK` (string)
                + language: `nl` (string)
                + tags (object)
                    + _items: tag1, tag2 (array[string])
                + custom_fields (object)
                    + _items (array)
                        + (object)
                            + field (object)
                                + _type: `customField`
                                + id: 123 (string)
                            + value: `092980616`
                + _meta (object)
                    + added_at: `2016-02-04T16:44:33+00:00` (string)
                    + updated_at: `2016-02-05T16:44:33+00:00` (string)

### companies.info [GET /companies.info]

Get company info

+ Request (application/json)

    + Attributes (object)
        + company_id: 123 (string)

+ Response 200 (application/json)

    + Attributes (object)
        + id: `123` (string)
        + name: `Pied Piper` (string)
        + business_type: `NV` (string)
        + vat_number: `BE0899623035` (string)
        + local_business_number: `63326426` (string)
        + email: `info@piedpiper.eu` (string)
        + invoice_email: `invoicing@example.com` (string, optional)
        + phone: `092980615` (string)
        + fax: `091234567` (string)
        + website: `https://piedpiper.com` (string)
        + avatar (string)
        + address (Address)
        + delivery_address (Addressee)
        + visiting_address (Addressee)
        + invoice_address (Addressee)
        + iban: `BE12123412341234` (string)
        + bic: `BICBANK` (string)
        + language: `nl` (string)
        + tags (object)
            + _items: tag1, tag2 (array[string])
        + custom_fields (object)
            + _items (array)
                + (object)
                    + field (object)
                        + _type: `customField`
                        + id: 123 (string)
                    + value: `092980616`
        + remarks: `First contact at expo` (string)
        + _meta (object)
            + added_at: `2016-02-04T16:44:33+00:00` (string)
            + updated_at: `2016-02-05T16:44:33+00:00` (string)

### companies.add [POST /companies.create]

Add a Teamleader company

+ Request (application/json)

    + Attributes (object)
        + name: `Pied Piper` (string, required)
        + business_type: `NV` (string, optional) - containing the company type (eg NV, BVBA,..)
        + vat_number: `BE0899623035` (string, optional)
        + local_business_number: `63326426` (string, optional) - the local business number (KVK in the Netherlands)
        + email: `john@example.com` (string, required) - The email address of the new contact
        + invoice_email: `invoicing@example.com` (string, optional)
        + phone: `1234567` (string, optional)
        + fax: `7654321` (string, optional)
        + website: `http://example.com` (string, optional)
        + address (Address, optional)
        + delivery_address (Addressee, optional)
        + visiting_address (Addressee, optional)
        + invoice_address (Addressee, optional)
        + iban: `BE12 1234 1234 1234` (string)
        + bic: `BICBANK` (string)
        + language: `en` (string, optional) - Language code according to ISO 639-1. For Dutch: "nl"
        + remarks: `Met at expo` (string, optional) - Background information on the contact
        + tags: expo, upsell (array[string], optional) - Pass one or more tags. Existing tags will be reused, new tags will be automatically created for you.
        + custom_fields (array)
            + (object)
                + custom_field_id: 123 (string)
                + value

+ Response 201 (application/json)

    + Attributes (object)
        + id: `1` (string)

### companies.update [POST /companies.update]

Update a Teamleader company

+ Request (application/json)

    + Attributes (object)
        + company_id: `1` (string, required) - The ID of the contact you want to update
        + name: `1` (string, required)
        + email: `john@example.com` (string, required) - The email address of the new contact
        + vat_number: `BE0899623035` (string, optional)
        + phone: `1234567` (string, optional)
        + fax: `7654321` (string, optional)
        + address (Address, optional)
        + invoice_email: `invoicing@example.com` (string, optional)
        + website: `http://example.com` (string, optional)
        + remarks: `Met at expo` (string, optional) - Background information on the contact
        + account_manager_id: `1` (string, optional)
        + local_business_number: `63326426` (string, optional) - the local business number (KVK in the Netherlands)
        + business_type: `NV` (string, optional) - containing the company type (eg NV, BVBA,..)
        + language: `en` (string, optional) - Language code according to ISO 639-1. For Dutch: "nl"
        + tags: expo, upsell (array[string], optional) - Pass one or more tags. Existing tags will be reused, new tags will be automatically created for you.
        + custom_fields (array)
            + (object)
                + custom_field_id: 123 (string)
                + value

+ Response 204

### companies.delete [POST /companies.delete]

Delete a company from Teamleader

+ Request (application/json)

    + Attributes (object)
        + company_id: `1` (string, required) - The account ID of the company you wish to delete

+ Response 204

### companies.tag [POST /companies.tag]

Add a tag to a company

+ Request (application/json)

    + Attributes (object)
        + company_id: `123` (string, required) - The ID of a company
        + tags: prospect, expo (array[string], required) - A list of tags to add

+ Response 204

### companies.untag [POST /companies.untag]

Remove a tag from a company

+ Request (application/json)

    + Attributes (object)
        + company_id: `123` (string, required) - The ID of a company
        + tags: prospect, expo (array[string], required) - A list of tags to remove

+ Response 204

### companyTypes.list [GET /companyTypes.list]

Get the names of business types (legal structures) a company can have within a certain country.

+ Request (application/json)

    + Attributes (object)
        + country: `BE` (string) -  country code according to ISO 3166-1 alpha-2. For Belgium: "BE"

+ Response 200 (application/json)

    + Attributes (object)
        + _items (array)
            + (object)
                + name: `BVBA` (string)

## Deals [/deals]

### deals.list [GET /deals.list]

Get a list of all deals

+ Request (application/json)

    + Attributes (object)
        + page (object, optional)
            + size: `10` (number, optional) - Amount of results you want
                + Default: `20`
            + number: `1` (number, optional) - Page of results you want
                + Default: `1`
        + filter (object, optional)
            + term: `Teamleader` (string, optional) - A search string. Teamleader will try to search deals matching this string.
            + phase_id: `5` (string, optional) - Only return deals with this phase ID
            + company_id: `123` (string, optional) - Only return deals for this company
            + contact_id: `456` (string, optional) - Only return deals for this contact
            + project_id: `789` (string, optional) - Only return deals for this project

+ Response 200 (application/json)

    + Attributes (object)
        + _items (array)
            + (object)
                + id: `164938` (string)
                + title: `Interesting deal` (string)
                + customer (object)
                    + _type: `contact`
                    + id: 1 (string)
                + probability: `0.5` (number)
                + phase (object)
                    + _type: `dealPhase`
                    + id: 1 (string)
                + responsible_user (object)
                    + _type: `user`
                    + id: 1 (string)
                + created_at: `2017-05-09T11:25:11+00:00` (string)
                + last_activity_at: `2017-05-09T11:30:58+00:00` (string)
                + won_at: `2017-05-09T11:31:30+00:00` (string)
                + lost_at: `2017-05-09T11:31:30+00:00` (string)
                + reason_lost: `No interest` (string)
                + source: `Facebook` (string)
                + custom_fields (object)
                    + _items (array)
                        + (object)
                            + field (object)
                                + id: 123 (string)
                                + name: `A custom field` (string)
                                + type: `single_line` (enum[string])
                                    + Members
                                        + auto_increment
                                        + boolean
                                        + company
                                        + contact
                                        + date
                                        + email
                                        + enum
                                        + integer
                                        + money
                                        + multi_line
                                        + number
                                        + phone_number
                                        + product
                                        + set
                                        + single_line
                                        + url
                                        + user
                            + value

### deals.info [GET /deals.info]

Get deal details

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (string, required)

+ Response 200 (application/json)

    + Attributes (object)
        + id: `164938` (string)
        + title: `Interesting deal` (string)
        + customer (object)
            + _type: `contact` (string)
            + id: 123 (string)
        + probability: `0.5` (number)
        + phase (object)
            + _type: dealPhase (string)
            + id: `5` (string)
        + responsible_user (object)
            + _type: user (string)
            + id: 17 (string)
        + value: `10` (number)
        + probability: `0.75` (number)
        + created_at: `2017-05-09T11:25:11+00:00` (string)
        + last_activity_at: `2017-05-09T11:30:58+00:00` (string)
        + won_at: `2017-05-09T11:31:30+00:00` (string)
        + lost_at: `2017-05-09T11:31:30+00:00` (string)
        + reason_lost: `No interest` (string)
        + source: `Facebook` (string)
        + custom_fields (object)
            + _items (array)
                + (object)
                    + field (object)
                        + id: 123 (string)
                        + name: `A custom field` (string)
                        + type: `single_line` (enum[string])
                            + Members
                                + auto_increment
                                + boolean
                                + company
                                + contact
                                + date
                                + email
                                + enum
                                + integer
                                + money
                                + multi_line
                                + number
                                + phone_number
                                + product
                                + set
                                + single_line
                                + url
                                + user
                    + value
        + phase_changes (object)
            + _items (array)
                + (object)
                    + old_phase (object)
                        + id: `1` (string)
                    + new_phase (object)
                        + id: `2` (string)
                    + changed_at: `2017-05-01 12:00:00` (string)
                    + changed_by (object)
                        + _type: user (string)
                        + id: `5` (string)

### deals.create [POST /deals.create]

Create a deal for a contact or company.

+ Request (application/json)

    + Attributes (object)
        + customer (object)
            + type (enum[string])
                + Members
                    + contact
                    + company
            + id: 123 (string)
        + title: `Interesting business deal` (string, required)
        + source: `Facebook` (string, required)
        + department_id: `1` (string, optional)
        + responsible_user_id: `1` (string, optional)
        + phase_id: `1` (string, optional)
        + value: `10` (number, optional)
        + probability: `0.75` (number, optional)
        + custom_fields (array)
            + (object)
                + field_id: 123 (string)
                + value

+ Response 201 (application/json)

    + Attributes (object)
        + id: `1` (string)

### deals.update [POST /deals.update]

Update a deal.

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (string, required)
        + title: `Interesting business deal` (string, optional)
        + source: `Google Adwords` (string, optional)
        + department_id: `1` (string, optional)
        + responsible_user_id: `1` (string, optional)
        + value: `10` (number, optional)
        + probability: `0.75` (number, optional)
        + custom_fields (array)
            + (object)
                + field_id: 123 (string)
                + value

+ Response 204

### deals.changePhase [POST /deals.changePhase]

Move a deal to a new phase.

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (string, required)
        + phase_id: `1` (string, optional)

+ Response 204

### dealPhases.list [GET /dealPhases.list]

Get a list of all phases a deal can go through

+ Response 200 (application/json)

    + Attributes (object)
        + _items (array)
            + (object)
                + id: 1 (string)
                + name: `New` (string)

### dealSources.list [GET /dealSources.list]

Get a list of all deal sources

+ Response 200 (application/json)

    + Attributes (object)
        + _items: Facebook, Twitter (array[string])

## Departments [/departments]

### departments.list [GET /departments.list]

Get a list of all departments

+ Response 200 (application/json)

    + Attributes (object)
        + _items (array)
            + (object)
                + _type: `department` (string)
                + id: `42` (number)
                + name: `Human Resources` (string)
                + name_short: `HR` (string)
                + email: `hr@example.com` (string)
                + invoicing_email: `invoicing@example.com` (string)
                + website: `http://example.com` (string)
                + phone: `1234567` (string)
                + fax: `7654321` (string)
                + address (Address)
                + vat_number: `BE0899623035` (string)
                + local_business_number: `63326426` (string)
                + bank_name: `Bank of Switzerland` (string)
                + iban: `BE12 1234 1234 1234` (string)
                + bic: `BICBANK` (string)
                + interest_rate: `12` (number)
                + late_fee: `12` (number)
                + minimum_late_fee: `12` (number)
                + registration_number: `12` (number)

### departments.add [POST /departments.add]

Add a department

+ Request (application/json)

    + Attributes (object)
        + name: `Human Resources` (string, required)
        + name_short: `HR` (string)
        + email: `hr@example.com` (string, required)
        + invoicing_email: `invoicing@example.com` (string) - Automatic invoice reminders are sent from this e-mail address
        + website: `http://example.com` (string)
        + phone: `1234567` (string)
        + fax: `7654321` (string)
        + address (Address, required)
        + vat_number: `BE0899623035` (string)
        + local_business_number: `63326426` (string) - Local business number (KVK in the Netherlands)
        + bank_name: `Bank of Switzerland` (string)
        + iban: `BE12 1234 1234 1234` (string)
        + bic: `BICBANK` (string)
        + interest_rate: `12` (number) - Interest rate (percentage)
        + late_fee: `12` (number) - Late fee (percentage)
        + minimum_late_fee: `12` (number) - Minimum late fee
        + registration_number: `12` (number)

+ Response 201 (application/json)

    + Attributes
        + data (object)
            + id: `1` (number)

### departments.update [POST /departments.update]

Update a department

+ Request (application/json)

    + Attributes (object)
        + id: `42` (number, required)
        + name: `Human Resources` (string)
        + name_short: `HR` (string)
        + email: `hr@example.com` (string)
        + invoicing_email: `invoicing@example.com` (string) - Automatic invoice reminders are sent from this e-mail address
        + website: `http://example.com` (string)
        + phone: `1234567` (string)
        + fax: `7654321` (string)
        + address (Address)
        + vat_number: `BE0899623035` (string)
        + local_business_number: `63326426` (string) - Local business number (KVK in the Netherlands)
        + bank_name: `Bank of Switzerland` (string)
        + iban: `BE12 1234 1234 1234` (string)
        + bic: `BICBANK` (string)
        + interest_rate: `12` (number) - Interest rate (percentage)
        + late_fee: `12` (number) - Late fee (percentage)
        + minimum_late_fee: `12` (number) - Minimum late fee
        + registration_number: `12` (number)

+ Response 204

## Quotations [/quotations]

### quotations.add [POST /quotations.add]

Add a quotation to a deal

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (string, required)
        + items (array[object], required)
            + (object)
                + product_id: `1` (string, optional)
                + quantity: `3` (number, required)
                + name: `An awesome product` (string, optional)
                + description: `Additional information` (string, optional)
                + unit_price (Price, optional)
                + ledger_id: `1` (string, optional) - Id of the bookkeeping ledger account
                + section: `Header` (string, optional) - All items under this section will be grouped

+ Response 204

### quotations.update [POST /quotations.update]

Update a deal quotation's items

+ Request (application/json)

    + Attributes (object)
        + quotation_id: `1` (string, required)
        + deal_id: `1` (string, optional)
        + items (array[object], optional)
            + (object)
                + product_id: `1` (string, optional)
                + quantity: `3` (number, required)
                + name: `An awesome product` (string, optional)
                + description: `Additional information` (string, optional)
                + unit_price (Price, optional)
                + ledger_id: `1` (string, optional) - Id of the bookkeeping ledger account
                + section: `Header` (string, optional) - All items under this section will be grouped

+ Response 204

### quotations.info [POST /quotations.info]

Get a quotation

+ Request (application/json)

    + Attributes (object)
        + quotation_id: `1` (string, required)

+ Response 200 (application/json)

    + Attributes (object)
        + quotation_id: `1` (string)
        + deal_id: `1` (string)
        + items (array[object])
            + (object)
                + product (object)
                    + _type: 'product'
                    + id: 123 (string)
                + quantity: `3` (number)
                + name: `An awesome product` (string)
                + description: `Additional information` (string)
                + unit_price (Price)
                + ledger_id: `1` (string) - Id of the bookkeeping ledger account
                + section: `Header` (string) - All items under this section will be grouped

### quotations.send [POST /quotations.send]

Send a deal's quotation via email to a client

+ Request (application/json)

    + Attributes (object)
        + quotation_id: `1` (string, required)
        + email: `john@example.com` (string, required) - The email recipient
        + subject: Your quotation` (string, required) - The email subject
        + message: `1` (string, required) - The email body
        + template_id: `1` (string, optional)

+ Response 204

## Invoices [/invoices]

### invoices.list [GET /invoices.list]

List invoices

+ Request (application/json)

    + Attributes (object)
        + filter (object, optional)
            + contact_id: `123` (string, optional) - The ID of the contact you wish to filter on. You can't provide a company ID.
            + company_id: `123` (string, optional) - The ID of the company you wish to filter on. You can't provide a contact ID.
            + date_from: `2016-01-01` (string, optional) - Format: yyyy-mm-dd
            + date_to: `2016-01-01` (string, optional) - yyyy-mm-dd
            + deal_id: `1` (string, optional) - The ID of the deal you wish to filter on.
            + department_id: `1` (string, optional) - The ID of the department you wish to filter on.
            + project_id: `1` (string, optional) - The ID of the project you wish to filter on.
            + subscription_id: `1` (string, optional) - The ID of the subscription you wish to filter on.
            + status: `booked` (enum[string], optional) - Only return booked or draft invoices. Leave blank to return everything
                + Members
                    + draft
                    + booked
        + page (object, optional)
            + size: `20` (number, optional) - Amount of invoices you want returned, 1 to 100.
                + Default: `20`
            + number: `1` (number, optional) - The numerated page you want, starts at 1.
                + Default: `1`

+ Response 200 (application/json)

    + Attributes (object)
        + _items (array)
            + (object)
                + id: `173111` (string)
                + department (object)
                    + _type: `department` (string)
                    + id: `1` (string)
                + invoice_number: `2017/5` (string)
                + invoice_date: `2016-02-04` (string)
                + status: `booked` (enum[string])
                    + Members
                        + booked
                        + draft
                + due_on: `2016-03-03` (string)
                + paid: `true` (boolean)
                + paid_at: `2016-02-04T16:44:33+00:00` (string)
                + invoicee (object)
                    + name: `De Rode Duivels` (string)
                    + address (Address)
                    + vat_number: `BE0899623035` (string)
                    + customer (object)
                        + _type: `contact` (string)
                        + id: `123` (string)
                    + for_attention_of (object)
                        + name: `Radja Nainggolan` (string)
                        + contact (object)
                            + _type: `contact` (string)
                            + id: `456` (string)
                + total (object)
                    + tax_exclusive (Money)
                    + tax_inclusive (Money)
                    + payable (Money)
                    + taxes (array)
                        + (object)
                            + rate: `0.21` (number)
                            + taxable (Money)
                            + tax (Money)
                    + withheld_taxes (array)
                        + (object)
                            + type: `Trabajo`
                            + rate: `0.21` (number)
                            + taxable (Money)
                            + tax (Money)

### invoices.info [GET /invoices.info]

Get a single invoice.

+ Request (application/json)

    + Attributes (object)
        + invoice_id: `1` (string)

+ Response 200 (application/json)

    + Attributes (object)
        + id: `173111` (string)
        + department (object)
            + _type: `department` (string)
            + id: `1` (string)
        + invoice_number: `2017/5` (string)
        + invoice_date: `2016-02-04` (string)
        + status: `booked` (enum[string])
            + Members
                + booked
                + draft
        + due_on: `2016-03-03` (string)
        + paid: true (boolean)
        + paid_at: `2016-02-04T16:44:33+00:00` (string)
        + invoicee (object)
            + name: `De Rode Duivels` (string)
            + address (Address)
            + vat_number: `BE0899623035` (string)
            + customer (object)
                + _type: `contact` (string)
                + id: `123` (string)
            + for_attention_of (object)
                + name: `Radja Nainggolan` (string)
                + contact (object)
                    + _type: `contact` (string)
                    + id: `456` (string)
        + line_items (array[object])
            + (object)
                + product_id: `1` (string) - Id of the product
                + quantity: `3` (number)
                + name: `An awesome product` (string)
                + description: `Additional information` (string)
                + unit_price (Price)
                + ledger_id: `1` (string) - Id of the bookkeeping ledger account
                + section: `Header` (string) - All items under this section will be grouped
                + source (object)
                    + type (enum[string])
                        + project
                        + deal
                        + timetracking
                        + subscription
                    + id (string)
        + payments (array)
            + (object)
                + payment_id (string)
                + amount (Money)
                + paid_at (string)
        + total (object)
            + tax_exclusive (Money)
            + tax_inclusive (Money)
            + payable (Money)
            + taxes (array)
                + (object)
                    + rate: `0.21` (number)
                    + taxable (Money)
                    + tax (Money)
            + withheld_taxes (array)
                + (object)
                    + type: `Trabajo`
                    + rate: `0.21` (number)
                    + taxable (Money)
                    + tax (Money)

### invoices.draft [POST /invoices.draft]

Draft a new invoice

+ Request (application/json)

    + Attributes (object)
        + customer (object, optional) - Who is the invoice for?
            + type (enum[string])
                + Members
                    + contact
                    + company
            + id (string)
        + for_attention_of (object, optional)
            + name (string, optional)
            + contact_id (string, optional)
        + department_id (string) - Id of the department the invoice will be added to
        + payment_term (object, optional)
            + type (enum[string])
                + Members
                    + cash - Direct payment, often cash
                    + end_of_month - End of the month of Xth day after the invoice date
                    + after_invoice_date - X days after invoice date
            + days (number, optional) - Modifier "X" for the above statements. Not required when type is 'cash'.
        + layout_id (string, optional) - Id of the layout you wish to use for this invoice
        + purchase_order_number (string, optional) - The external order number. Overrides possible PO number coming from project.
        + remarks (string, optional) - Free form text. Visible on the invoice depending on the template.
        + line_items (array[object])
            + (object)
                + product_id: `1` (string, optional) - Id of the product
                + quantity: `3` (number)
                + name: `An awesome product` (string, optional)
                + description: `Additional information` (string, optional)
                + unit_price (Price, optional)
                + ledger_id: `1` (string, optional) - Id of the bookkeeping ledger account
                + section: `Header` (string, optional) - All items under this section will be grouped
                + source (object, optional)
                    + type (enum[string], required)
                        + project
                        + deal
                        + timetracking
                        + subscription
                    + id (string, required)

+ Response 201 (application/json)

    + Attributes (object)
        + id: `1` (string) - ID of the invoice that was created

### invoices.update [POST /invoices.update]

Update an existing invoice. Not possible for declared invoices.

+ Request (application/json)

    + Attributes (object)
        + invoice_id: `123` (string)
        + customer (object, optional) - Who is the invoice for?
            + type (enum[string])
                + Members
                    + contact
                    + company
            + id (string)
        + for_attention_of (object, optional)
            + name (string, optional)
            + contact_id (string, optional)
        + department_id (string) - Id of the department the invoice will be added to
        + payment_term (object, optional)
            + type (enum[string])
                + Members
                    + cash - Direct payment, often cash
                    + end_of_month - End of the month of Xth day after the invoice date
                    + after_invoice_date - X days after invoice date
            + days (number, optional) - Modifier "X" for the above statements. Not required when type is 'cash'.
        + layout_id (string, optional) - Id of the layout you wish to use for this invoice
        + purchase_order_number (string, optional) - The external order number. Overrides possible PO number coming from project.
        + remarks (string, optional) - Free form text. Visible on the invoice depending on the template.
        + line_items (array[object])
            + (object)
                + product_id: `1` (string, optional) - Id of the product
                + quantity: `3` (number)
                + name: `An awesome product` (string, optional)
                + description: `Additional information` (string, optional)
                + unit_price (Price, optional)
                + ledger_id: `1` (string, optional) - Id of the bookkeeping ledger account
                + section: `Header` (string, optional) - All items under this section will be grouped

+ Response 204

### invoices.delete [POST /invoices.delete]

Delete an existing invoice. Only possible for draft invoices or the last booked invoice.

+ Request (application/json)

    + Attributes (object)
        + invoice_id: `1` (string, required)

+ Response 204

### invoices.book [POST /invoices.book]

Book a draft invoice.

+ Request (application/json)

    + Attributes (object)
        + invoice_id: `1` (string, required)
        + invoice_date: `2016-02-04` (string, optional)

+ Response 204

### invoices.download [POST /invoices.download]

+ Request (application/json)

    + Attributes (object)
        + invoice_id: `1` (string, required)
        + format: `pdf` (enum[string], required)
            + Members
                + pdf

### invoices.declare [POST /invoices.declare]

Declare a booked invoice, locking the invoice for future changes.

+ Request (application/json)

    + Attributes (object)
        + invoice_id: `1` (string, required)

+ Response 204

### invoices.registerPayment [POST /invoices.registerPayment]

+ Request (application/json)

    + Attributes (object)
        + invoice_id: `1` (string, required)
        + amount (Money, optional)
        + paid_at: `2016-02-04T16:44:33+00:00` (string, optional)

+ Response 201 (application/json)

    + Attributes (object)
        + id: `2` (string) - ID of the payment that was created

### invoices.removePayment [POST /invoices.removePayment]

+ Request (application/json)

    + Attributes (object)
        + invoice_id: `1` (string, required)
        + payment_id: `2` (string, required)

### invoices.credit [POST /invoices.credit]

Create a credit note from an invoice. Only possible for booked and declared invoices.

+ Request (application/json)

    + Attributes (object)
        + invoice_id: `1` (string, required)

+ Response 201 (application/json)

    + Attributes (object)
        + _type: `creditNote` (string)
        + id: `1` (string) - ID of the credit note that was created

### creditNotes.draft [POST /creditNotes.draft]

Create a draft credit note.

+ Request (application/json)

    + Attributes (object)
        + invoice_id (string, optional)
        + customer (object, optional)
            + type (enum[string])
                + Members
                    + contact
                    + company
            + id (string)
        + for_attention_of (object, optional)
            + name (string, optional)
            + contact_id (string, optional)
        + department_id (string)
        + payment_term (object, optional)
            + type (enum[string])
                + Members
                    + cash - Direct payment, often cash
                    + end_of_month - End of the month of Xth day after the invoice date
                    + after_invoice_date - X days after invoice date
            + days (number, optional) - Modifier "X" for the above statements. Not required when type is 'cash'.
        + layout_id (string, optional) - Id of the layout you wish to use for this invoice
        + purchase_order_number (string, optional) - The external order number. Overrides possible PO number coming from project.
        + remarks (string, optional) - Free form text. Visible on the invoice depending on the template.
        + line_items (array[object])
            + (object)
                + product_id: `1` (string, optional) - Id of the product
                + quantity: `3` (number)
                + name: `An awesome product` (string, optional)
                + description: `Additional information` (string, optional)
                + unit_price (Price, optional)
                + discount (object)
                    + type: `percentage` (enum[string])
                        + Members
                            + fixed
                            + percentage
                    + amount (number) - Either the fixed amount or the percentage.
                + ledger_id: `1` (string, optional) - Id of the bookkeeping ledger account
                + section: `Header` (string, optional) - All items under this section will be grouped

### creditNotes.list [GET /creditNotes.list]

List credit notes

+ Request (application/json)

    + Attributes (object)
        + filter (object, optional)
            + contact_id: `123` (string, optional) - The ID of the contact you wish to filter on. You can't provide a company ID.
            + company_id: `123` (string, optional) - The ID of the company you wish to filter on. You can't provide a contact ID.
            + date_from: `2016-01-01` (string, optional) - Format: yyyy-mm-dd
            + date_to: `2016-01-01` (string, optional) - yyyy-mm-dd
            + department_id: `1` (string, optional) - The ID of the department you wish to filter on.
            + project_id: `1` (string, optional) - The ID of the project you wish to filter on.
            + invoice_id: `1` (string, optional) - The ID of the invoice you wih to filter on.
        + page (object, optional)
            + size: `20` (number, optional) - Amount of credit notes you want returned, 1 to 100.
                + Default: `20`
            + number: `1` (number, optional) - The numerated page you want, starts at 1.
                + Default: `1`

+ Response 200 (application/json)

    + Attributes (object)
        + _items (array[object])
            + (object)
                + id: `173111` (string)
                + department (object)
                    + _type: `department` (string)
                    + id: `1` (string)
                + invoice (object)
                    + _type: `invoice` (string)
                    + id: `1` (string)
                + credit_note_number: `2017/5` (string)
                + paid: `true` (boolean)
                + paid_at: `2016-03-03T16:44:33+00:00` (string)
                + total (object)
                    + tax_exclusive (Money)
                    + tax_inclusive (Money)
                    + payable (Money)
                    + taxes (array)
                        + (object)
                            + rate: `0.21` (number)
                            + taxable (Money)
                            + tax (Money)
                    + withheld_taxes (array)
                        + (object)
                            + type: `Trabajo`
                            + rate: `0.21` (number)
                            + taxable (Money)
                            + tax (Money)
                + invoicee (object)
                    + name: `De Rode Duivels` (string)
                    + address (Address)
                    + vat_number: `BE0899623035` (string)
                    + customer (object)
                        + _type: `contact` (string)
                        + id: `123` (string)
                    + for_attention_of (object)
                        + name: `Radja Nainggolan` (string)
                        + contact (object)
                            + _type: `contact` (string)
                            + id: `456` (string)

### creditNotes.update [POST /creditNotes.update]

### creditNotes.book [POST /creditNotes.book]

### taxRates.list [GET /taxRates.list]

## Products [/products]

### products.list [POST /products.list]

+ Request (application/json)

    + Attributes (object)
        + ids: 1,2 (array[string], optional)
        + page (object, optional)
            + size: `20` (number, optional) - The amount of contacts returned per request, max 1 to 100
                + Default: `20`
            + number: `1` (number, optional) - The current page, the first page is 1
                + Default: `1`

+ Response 200 (application/json)

    + Attributes (object)
        + _items (array)
            + (object)
                + id: `1` (string)
                + translations (object)
                    + _items (array)
                        + (object)
                            + language: `EN` (string)
                            + name: `Product name` (string)
                            + description: `Product description` (string)
                + default_language (string)
                + prices (array[Price])
                + price_lists (array)
                    + (object)
                        + price_list (object)
                            + _type (string)
                            + id (string)
                        + price (Price)

### products.info [POST /products.info]

+ Request (application/json)

    + Attributes (object)
        + id: `1` (string, required)

+ Response 200 (application/json)

    + Attributes (object)
        + id: `1` (string)
        + translations (object)
            + _items (array)
                + (object)
                    + language: `EN` (string)
                    + name: `Product name` (string)
                    + description: `Product description` (string)
        + default_language (string)
        + prices (array[Price])
        + price_lists (array)
            + (object)
                + price_list (object)
                    + _type (string)
                    + id (string)
                + price (Price)
        + custom_fields (object)
            + _items (array)
                + (object)
                    + field (object)
                        + _type: `customField`
                        + id: 123 (string)
                    + value: `092980616`

### products.add [POST /products.add]

+ Request (application/json)

    + Attributes (object)
        + translations (array, required)
            + (object)
                + language: `EN` (string, required)
                + name: `Product name` (string, required)
                + description: `Product description` (string, optional)
        + default_language (string, required)
        + prices (array[Price], required)
        + custom_fields (array, optional)
            + (object)
                + custom_field_id: 123 (string, required)
                + value: `092980616` (required)

+ Response 201 (application/json)

    + Attributes (object)
        + id: `1` (string)

### products.update [POST /products.update]

+ Request (application/json)

    + Attributes (object)
        + id (string, required)
        + translations (array, optional)
            + (object)
                + language: `EN` (string, required)
                + name: `Product name` (string, required)
                + description: `Product description` (string, optional)
        + default_language (string, optional)
        + prices (array[Price], optional)
        + custom_fields (array, optional)
            + (object)
                + custom_field_id: 123 (string, required)
                + value: `092980616` (required)

+ Response 204 (application/json)

### products.delete [POST /products.delete]

+ Request (application/json)

    + Attributes (object)
        + id: `1` (string, required)

+ Response 204 (application/json)

## Meetings [/meetings]

### meetings.delete [POST /meetings.delete]

Delete a meeting from Teamleader

+ Request (application/json)

    + Attributes (object)
        + meeting_id: `1` (number, required) - The ID of the meeting you wish to delete

+ Response 204

## Milestones [/milestones]

### milestones.list [GET /milestones.list]

Search the milestones (cross projects)

+ Request (application/json)

    + Attributes (object)
        + filter (object, required)
             + responsible_employee_id: `1` (number, required) - Use this to filter by responsible employee
             + start_date: `2017-01-01` (string, required) - Format ISO 8601: yyyy-mm-dd
             + end_date: `2017-01-01` (string, required) - Format ISO 8601: yyyy-mm-dd

+ Response 200 (application/json)

    + Attributes (object)
        + _items (array)
            + (object)
                + id: `247` (number)
                + name: `Optimize the middle-out compression` (string)
                + due_date: `2017-01-15` (string)
                + done: `false` (boolean)
                + project (object)
                    + id: `20` (number)
                    + name: `PiperChat` (string)

## Webhooks [/webhooks]

### /webhooks.register [POST /webhooks.register]

Register a webhook.

+ Request (application/json)

    + Attributes (object)
        + url: `https://www.mywebhookurl.com` (string, required) - Your webhook url
        + types (array[enum[string]], required) - Array of event types that should fire the webhook
            + Members
                + CONTACT_ADDED
                + CONTACT_EDITED
                + CONTACT_DELETED
                + COMPANY_ADDED
                + COMPANY_EDITED
                + COMPANY_DELETED
                + RELATED_CONTACTS_UPDATED
                + SALE_ADDED
                + SALE_QUOTATION
                + SALE_PHASE_CHANGED
                + SALE_ACCEPTED
                + SALE_REFUSED
                + SALE_DELETED
                + MEETING_ADDED
                + MEETING_EDITED
                + MEETING_CANCELLED
                + TASK_ADDED
                + TASK_EDITED
                + TASK_FINISHED
                + TASK_DELETED
                + TIMETRACKING_ADDED
                + TIMETRACKING_EDITED
                + TIMETRACKING_DELETED
                + INVOICE_ADDED
                + INVOICE_UPDATED
                + INVOICE_BOOKED
                + INVOICE_SENT
                + INVOICE_PAID
                + INVOICE_NOT_PAID
                + INVOICE_DELETED
                + CREDITNOTE_ADDED
                + CREDITNOTE_UPDATED
                + CREDITNOTE_SENT
                + CREDITNOTE_DELETED
                + PRODUCT_ADDED
                + PRODUCT_EDITED
                + PRODUCT_DELETED
                + PROJECT_ADDED
                + PROJECT_EDITED
                + PROJECT_DELETED
                + MILESTONE_ADDED
                + MILESTONE_EDITED
                + MILESTONE_CLOSED
                + MILESTONE_DELETED
                + TICKET_ADDED
                + TICKET_EDITED
                + TICKET_NEW_MESSAGE
                + TICKET_CLOSED
                + FILE_ADDED
                + FILE_EDITED
                + FILE_DELETED
                + CUSTOM_FIELD_ADDED
                + CUSTOM_FIELD_EDITED
                + CUSTOM_FIELD_DELETED
                + USER_DAYS_OFF_EDITED
                + COMPANY_CLOSING_DAYS_EDITED

+ Response 204

# Data Structures

## Address (object)
+ street: `Newell Road` (string)
+ number: `5230` (string)
+ zipcode: `94020` (string)
+ city: `Palo Alto` (string)
+ country: `US` (string)

## Addressee (object)
+ addressee: `Pied Piper Finance Dep.` (string, optional)
+ street: `Newell Road` (string)
+ number: `5230` (string)
+ zipcode: `94020` (string)
+ city: `Palo Alto` (string)
+ country: `US` (string)

## Price (object)
+ amount: `123.30` (number, required)
+ currency: `EUR` (enum[string], required)
    + Members
        + BAM
        + CAD
        + CHF
        + CLP
        + CNY
        + COP
        + CZK
        + DKK
        + EUR
        + GBP
        + INR
        + ISK
        + JPY
        + MAD
        + MXN
        + NOK
        + PEN
        + PLN
        + RON
        + SEK
        + TRY
        + USD
        + ZAR
+ tax_id: `1` (string, required)
+ tax_inclusive: false (boolean, optional)

## Money (object)
+ amount: `123.30` (number, required)
+ currency: `EUR` (enum[string], required)
    + Members
        + BAM
        + CAD
        + CHF
        + CLP
        + CNY
        + COP
        + CZK
        + DKK
        + EUR
        + GBP
        + INR
        + ISK
        + JPY
        + MAD
        + MXN
        + NOK
        + PEN
        + PLN
        + RON
        + SEK
        + TRY
        + USD
        + ZAR

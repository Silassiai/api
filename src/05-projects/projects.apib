## Projects [/projects]

### projects.list [GET /projects.list]

Search projects

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + filter (object, required)
            + status: `active` (enum[string], optional)
                + Members
                    + active
                    + on_hold
                    + done
                    + canceled
            + starts_before: `2017-01-01` (string, optional) - Format ISO 8601: yyyy-mm-dd
            + starts_after: `2016-01-01` (string, optional) - Format ISO 8601: yyyy-mm-dd
            + due_before: `2017-01-01` (string, optional) - Format ISO 8601: yyyy-mm-dd
            + due_after: `2016-01-01` (string, optional) - Format ISO 8601: yyyy-mm-dd

+ Response 200 (application/json;charset=utf-8)

    + Attributes (object)
        + data (array)
            + (object)
                + id: `1` (string)
                + reference: `PRO-2` (string)
                + title: `New company website` (string)
                + description (string)
                + status: `active` (enum[string])
                    + Members
                        + active
                        + on_hold
                        + done
                        + canceled
                + customer (object)
                    + type: `contact` (string)
                    + id: `123` (string)
                + starts_on: `2016-02-04` (string)
                + due_on: `2016-10-14` (string)
                + source (object)
                    + type: `deal` (string)
                    + id: `456` (string)

### projects.info [GET /projects.info]

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + id (string, required)

+ Response 200 (application/json;charset=utf-8)

    + Attributes (object)
        + data (object)
            + id: `1` (string)
            + project_number: `PRO-1` (string)
            + title: `New company website` (string)
            + description (string)
            + status: `active` (enum[string])
                + Members
                    + active
                    + on_hold
                    + done
                    + canceled
            + customer (object)
                + type: `contact` (enum[string])
                    + Members
                        + contact
                        + company
                + id: `123` (string)
            + starts_on: `2016-02-04` (string)
            + due_on: `2016-02-04` (string)
            + source (object)
                + type: `deal` (string)
                + id: `456` (string)
            + milestones (array)
                + (object)
                    + type: `milestone` (string)
                    + id (string)
            + participants (array)
                + (object)
                    + participant (object)
                        + type: `user` (enum[string])
                            + Members
                                + user
                        + id (string)
                    + role (enum[string])
                        + Members
                            + decision_maker
                            + member

### projects.create [POST /projects.create]

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + title: `New company website` (string, required)
        + description (string, optional)
        + customer (object, optional)
            + type: `contact` (enum[string], required)
                + Members
                    + contact
                    + company
            + id: `123` (string, required)
        + starts_on: `2016-02-04` (string, required)
        + source (object, optional)
            + type: `deal` (enum[string], required)
                + Members
                    + deal
            + id: `456` (string, required)

+ Response 201 (application/json;charset=utf-8)

    + Attributes (object)
        + data (object)
            + type: `project` (string)
            + id: `1` (string)

### projects.update [POST /projects.update]

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + id: `1` (string, required)
        + title: `New company website` (string, optional)
        + description (string, optional)
        + status: `active` (enum[string], optional)
            + Members
                + active
                + on_hold
                + done
                + canceled
        + customer (object, optional)
            + type: `contact` (enum[string], required)
                + Members
                    + contact
                    + company
            + id: `123` (string, required)
        + starts_on: `2016-02-04` (string, optional)
        + source (object, optional)
            + type: `deal` (enum[string], required)
                + Members
                    + deal
            + id: `456` (string, required)

+ Response 204 (application/json;charset=utf-8)

### projects.addParticipant [POST /projects.addParticipant]

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + id (string, required)
        + participant (object, required)
            + type: `user` (string)
            + id (string)
        + role (enum[string], optional)
            + Members
                + decision_maker
                + member
            + Default: `member`

+ Response 204

### projects.updateParticipant [POST /projects.updateParticipant]

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + id (string, required)
        + participant (object, optional)
            + type: `user` (string)
            + id (string)
        + role (enum[string], required)
            + Members
                + decision_maker
                + member

+ Response 204

### projects.removeParticipant [POST /projects.removeParticipant]

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + id (string)
        + participant (object)
            + type: `user` (string)
            + id (string)

+ Response 204

### projects.delete [POST /projects.delete]

Delete a project.

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + id: `1` (string, required)

+ Response 204 (application/json;charset=utf-8)

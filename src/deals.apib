## Deals [/deals]

### /deals.create [POST /deals.create]

Add a deal for a contact or company.

+ Request (application/json)

    + Attributes (object)
        + contact_or_company: `company` (enum[string], required) - Who is related to this deal?
            + Members
                + company
                + contact
        + contact_or_company_id: `1` (number, required) - ID of the related contact or company
        + title: `Interesting business deal` (string, required)
        + source: `Google Adwords` (string, required)
        + description_1: `Search module` (string, required)
        + price_1: `5` (number, required)
        + amount_1: `1` (number, required)
        + vat_1: `21` (enum[string], required) - The vat tariff for this line
            + Members
                + 00
                + 06
                + 12
                + 21
                + CM
                + EX
                + MC
                + VCMD
        + product_id_1: `1` (number, optional) - ID of the product
        + account_1: `1` (number, optional) - ID of the bookkeeping account
        + subtitle_1: `Enable search` (string, optional)
        + custom_field_ID: `1` (number, optional) - replace ID by the ID of your custom field.
        + sys_department_id: `1` (number, optional) - ID of the department the deal will be added to
        + responsible_sys_client_id: `1` (number, optional) - ID of the user that is responsible for this deal
        + phase_id: `1` (number, optional) - new phase ID this deal should be moved to
        + description: `1` (string, optional) - If this parameter is filled out a quotation (PDF) is generated by Teamleader using the text provided and the items. The PDF is accessible via the web interface.
        + budget_estimation: `10` (number, optional) - budget estimation for this deal. This value will be overwritten once a quotation is made for this deal
        + optional_contact_id: `1` (number, optional) - if this deal is related to a company, you can specify the ID of a related contact within that company via this parameter
        + filter_double_sales: `0` (number, optional) - if set to 1, an extra check added to make sure the deal isn't a double of the previous one.'

+ Response 201 (application/json)

        {
            "id": 165655
        }

### /deals.update [POST /deals.update]

Update a deal

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (number, required) - Who is related to this deal?
        + description_1: `Search module` (string, required)
        + price_1: `5` (number, required)
        + amount_1: `1` (number, required)
        + vat_1: `21` (enum[string], required) - The vat tariff for this line
            + Members
                + 00
                + 06
                + 12
                + 21
                + CM
                + EX
                + MC
                + VCMD
        + product_id_1: `1` (number, optional) - ID of the product
        + account_1: `1` (number, optional) - ID of the bookkeeping account
        + subtitle_1: `Enable search` (string, optional)

+ Response 200 (application/json)

        {
            "status": "OK"
        }

### /deals.items.update [POST /deals.items.update]

Update a deal's items

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (number, required) - Who is related to this deal?
        + title: `Interesting business deal` (string, optional)
        + source: `Google Adwords` (string, optional)
        + responsible_sys_client_id: `1` (number, optional) - ID of the user that is responsible for this deal
        + phase_id: `1` (number, optional) - new phase ID this deal should be moved to
        + budget_estimation: `10` (number, optional) - budget estimation for this deal. This value will be overwritten once a quotation is made for this deal
        + custom_field_ID: `1` (number, optional) - replace ID by the ID of your custom field.

+ Response 200 (application/json)

        {
            "status": "OK"
        }

### /deals.sendToClient [POST /deals.sendToClient]

Send a deal via email to client

+ Request (application/json)

    + Attributes (object)
        + sale_id: `1` (number, required) - ID of the deal
        + email: `john@example.com` (string, required) - Email of the client
        + subject: `1` (number, required) - Subject of the email
        + message: `1` (number, required) -  Add <link> to the message to print out the InvoiceCloud link. (not required when using an email template, leave empty or discard from request when using template_id)
        + template_id: `1` (number, optional) - ID of the email message created in Teamleader.

+ Response 200 (application/json)

        {
            "status": "OK"
        }

### /deals.list [GET /deals.list]

Get a list of all deals

+ Request (application/json)

    + Attributes (object)
        + amount: `10` (number, required) - Amount of results you want
        + pageno: `0` (number, required) - Page of results you want
        + searchby: `Teamleader` (string, optional) - A search string. Teamleader will try to search deals matching this string.
        + selected_customfields: `42,142` (string, optional) - Comma-separated list of the IDs of the custom fields you wish to select (max 10).
        + filter_by_phase_id: `5` (string, optional) - Only return deals with this phase ID
        + segment_id: `1` (string, optional) - The ID of a segment created for deals.

+ Response 200 (application/json)

    + Attributes (array[Deal])

### /deals.byContact [GET /deals.byContact]

Get a list of all deals by contact

+ Request (application/json)

    + Attributes (object)
        + contact_id: `1` (number, required) - ID of the related contact

+ Response 200 (application/json)

        [
            {
                "deal_id": 1,
                "phase_id": 5
            }
        ]

### /deals.byCompany [GET /deals.byCompany]

Get a list of all deals by company

+ Request (application/json)

    + Attributes (object)
        + company_id: `1` (number, required) - ID of the related company

+ Response 200 (application/json)

        [
            {
                "deal_id": 1,
                "phase_id": 5
            }
        ]

### /deals.byProject [GET /deals.byProject]

Get a list of all deals by project

+ Request (application/json)

    + Attributes (object)
        + project_id: `1` (number, required) - ID of the project

+ Response 200 (application/json)

        [
            {
                "deal_id": 1
            }
        ]

### /deals.info [GET /deals.info]

Get deal details

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (number, required) - ID of the deal you want

+ Response 200 (application/json)

    + Attributes (Deal)

### /deals.phases.changes [GET /deals.phases.changes]

Get a list of a deal phase changes

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (number, required) - ID of the deal you want

+ Response 200 (application/json)

        [
            {
                "old_phase_id": "",
                "new_phase_id": 5,
                "change_date": 1492074106,
                "change_date_formatted": "13/04/2017",
                "related_user_id": ""
            }
        ]

### /deals.phases.list [GET /deals.phases.list]

Get a list of all phases a deal can go through

+ Response 200 (application/json)

        [
            {
                "id": "1",
                "name": "New"
            },
            {
                "id": "2",
                "name": "Contacted"
            }
        ]

### /deals.sources.list [GET /deals.sources.list]

Get a list of all deal sources

+ Response 200 (application/json)

        [
            {
                "id": "1",
                "name": "Google Search"
            },
            {
                "id": "2",
                "name": "Exposition"
            }
        ]

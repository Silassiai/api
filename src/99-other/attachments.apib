## Attachments [/attachments]

### attachments.list [GET /attachments.list]

Get a list of all attachments relating to an object

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + page (Page, optional)
        + subject (object, required)
            + type (enum[string], required)
                + contact
                + company
                + deal
                + ticket
                + project
                + event
            + id (string, required)

+ Response 200 (application/json;charset=utf-8)

    + Attributes (object)
        + data (array)
            + (object)
                + id: `101` (string)
                + subject (object)
                    + type (enum[string])
                        + contact
                        + company
                        + deal
                        + ticket
                        + project
                        + event
                    + id (string)
                + name: `logo.eps` (string)
                + path: `pics/logo.eps` (string)
                + size: `256` (number) - in bytes
                + mime_type (string)
                + added_by (object)
                    + type: `user` (string)
                    + id (string)
                + added_at: `2017-10-13T00:02:17+0200` (string)
                + updated_at: `2017-10-13T00:02:17+0200` (string)

### attachments.info [GET /attachments.info]

Get a info about a specific attachment

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + id: `20` (string, required)

+ Response 200 (application/json;charset=utf-8)

    + Attributes (object)
        + data (object)
            + id: `101` (string)
            + subject (object)
                + type (enum[string])
                    + contact
                    + company
                    + deal
                    + ticket
                    + project
                    + event
                + id (string)
            + name: `logo.eps` (string)
            + path: `pics/logo.eps` (string)
            + size: `256` (number) - in bytes
            + mime_type (string)
            + added_by (object)
                + type: `user` (string)
                + id (string)
            + added_at: `2017-10-13T00:02:17+0200` (string)
            + updated_at: `2017-10-13T00:02:17+0200` (string)

### attachments.download [GET /attachments.download]

Get a signed url where the attachment can be downloaded. The signed url will remain valid for 30 seconds.

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + id: `20` (string, required)

+ Response 307 (application/json;charset=utf-8)

    + Headers

              Location: The url of the downloadable file. This will remain valid for 30 seconds.

### attachments.add [POST /attachments.add]

Add a file, by first posting its meta-data and afterwards PUTting the contents to the returned Location header url.

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + path: `design/v1.0/logo.jpg` (string, optional)
        + size: `3355` (number) - In bytes
        + mime_type (string)
        + subject (object, required)
            + type (enum[string])
                + contact
                + company
                + deal
                + ticket
                + project
                + event
            + id (string)

+ Response 201 (application/json;charset=utf-8)

    + Headers

            Location: the url where to PUT to, this url may be limited in time

    + Attributes (object)
        + data (object)
            + id: `123` (string)

### attachments.update [POST /attachments.update]

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + id: `20` (string, required)
        + path: `pics/logo2.jpg` (string, required)

+ Response 204

### attachments.delete [POST /attachments.delete]

Delete an attachment

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + id: `20` (string, required)

+ Response 204
